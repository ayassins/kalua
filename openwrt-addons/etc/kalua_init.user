#!/bin/sh

[ -e '/tmp/.failsafe' ] && echo 'FAILSAFE=true'

# use the same PATH like interactive, but avoid it on TravisCI (br0ken)
[ -e '/etc/profile' -a -z "$TRAVIS" ] && {
	# in failsafe-mode profile.d-folder is not executed (on OpenWrt)
	# we do not need it for the PATH and the var gets not exported
	# FIXME! old versions source /tmp/loader in /etc/profile, and overwrite e.g. OPENWRT_REV
	sh -n '/etc/profile' && FAILSAFE=true command . '/etc/profile' >/dev/null
	echo "export PATH=$PATH:/sbin:/usr/sbin"
}

# http://wiki.openwrt.org/doc/uci/system#time.zones
TIMEZONE_BERLIN="CET-1CEST,M3.5.0,M10.5.0/3"
TIMEZONE="$( uci -q get system.@system[0].timezone )"
TIMEZONE="${TIMEZONE:-$TIMEZONE_BERLIN}"

# TODO: on VPN-server autoset/change the uci-var if needed
HOSTNAME="$( uci -q get 'system.@system[0].hostname' )"
HOSTNAME="${HOSTNAME:-$( cat '/proc/sys/kernel/hostname' 2>/dev/null || sysctl -n kern.hostname )}"	# freebsd fallback
HOSTNAME="${HOSTNAME:-$( hostname 2>/dev/null || echo 'anonymous' )}"

MONITORING_SERVERIP="$( uci -q get system.@monitoring[0].serverip )"
MONITORING_SERVERIP="${MONITORING_SERVERIP:-84.38.67.43}"

OPKG="$( command -v /bin/[o,i]pkg )" || {
	echo "opkg(){ _software opkg_raminstaller \"\$@\";}"
	OPKG="'_software opkg_raminstaller'"
}

read -r HARDWARE 2>/dev/null <'/etc/HARDWARE' || {
	# model name  : Intel(R) Xeon(R) CPU E5-2620 0 @ 2.00GHz
	set -- $( grep ^'model name' '/proc/cpuinfo' | head -n1 )
	shift 3
	HARDWARE="$*"
}
case "$HARDWARE" in 'TP-LINK TL-WDR3600/4300/4310') HARDWARE='TP-LINK TL-WDR4300';; esac	# REMOVE!

[ -d '/var/www' ] && WWWDIR='/www' || WWWDIR='/www'
PERMDIR='/www/keep'	# for permanent files (kept when rebooting)
mkdir -p "$PERMDIR" 2>/dev/null || {
	PERMDIR="$TMPDIR/permanent_fake"
	mkdir -p "$PERMDIR"
	logger -s -- "$0: fallback \$PERMDIR to '$PERMDIR'"
}
mkdir -p "$PERMDIR" "$WWWDIR"

command -v nc >/dev/null || logger -s -- "$0: [ERR] missing netcat - please install"

# e.g. FFF_PLUS_VERSION
[ -e '/etc/variables_fff+' ] && . '/etc/variables_fff+'

cat <<EOF

# from $0.user @ $(date)
export TZ='$TIMEZONE'

NODENUMBER=\${NODENUMBER:-$( uci -q get system.@profile[0].nodenumber )}
CONFIG_PROFILE=\${CONFIG_PROFILE:-$( uci -q get system.@profile[0].name )}
HARDWARE='$HARDWARE'
HOSTNAME='$HOSTNAME'
OPKG=$OPKG
MONITORING_SERVERIP=$MONITORING_SERVERIP
export HOME=\$( eval echo ~${USER:-root} )	# user: '$USER'
FFF_PLUS_VERSION=$FFF_PLUS_VERSION;OPENWRT_REV=$OPENWRT_REV;LEDE_REV=$LEDE_REV
PERMDIR=$PERMDIR
WWWDIR=$WWWDIR

EOF
# $HOME: https://de.wikipedia.org/wiki/ADM-3A

read -r _ MEMTOTAL _ <'/proc/meminfo'
[ $MEMTOTAL -gt 16384 ] || echo 'LOWMEM=true'

test_iptables()
{
	export IPT='iptables'

	# direct call can fail if PATH not yet set
	if [ -e '/usr/sbin/iptables' ]; then
		/usr/sbin/iptables --help | grep -Fq -- '--wait' && {
			IPT='iptables --wait'
		}
	elif [ -e '/sbin/iptables' ]; then
		/sbin/iptables --help | grep -Fq -- '--wait' && {
			IPT='iptables --wait'
		}
	else
		IPT='true'
	fi

	# supress the annoying warning:
	$IPT -nL INPUT 2>&1 | grep -q 'Warning: iptables-legacy tables present' && {
		IPT="$IPT 2>/dev/null"
	}
}

# returncode of iptables from include/xtables.h
# 1 = OTHER_PROBLEM
# 2 = PARAMETER_PROBLEM
# 3 = VERSION_PROBLEM
# 4 = RESOURCE_PROBLEM

test_iptables
cat <<EOF
ipt(){
	$IPT "\$@" || {
		local rc=\$?
		local i out try=1

		case "\$*" in
			*'-nL'*|*'-nxvL'*|*' --new '*)
			;;
			*)
				out="\$( $IPT "\$@" 2>&1 )"
				_log it ipt daemon alert "[ERROR:\$rc] $IPT \$* => \$out"
			;;
		esac

		case "\$rc" in
			4)
				for i in 1 3 3 6 6 9 9 15 30; do {
					sleep \$i
					try=\$(( try + 1 ))

					if $IPT "\$@"; then
						_log it ipt daemon alert "[OK] on try \$try: $IPT \$*"
						rc=0
						break
					else
						rc=\$?
						_log it ipt daemon alert "[ERROR:\$rc] on try \$try: $IPT \$*"
					fi
				} done
			;;
		esac

		return \$rc
	}
}
IPT=ipt

EOF

TC="$( command -v 'tc' || echo 'true' )"
cat <<EOF
mytc(){
	$TC "\$@" || {
		local rc=\$?

		case "\$*" in
			*'show dev'*)
			;;
			*)
				_log it mytc daemon alert "rc: \$rc $TC \$*"
			;;
		esac

		return \$rc
	}
}
TC=mytc

EOF

# include helpers when 'interactive', e.g. SSH-login
[ -e '/etc/profile.d/kalua.sh' ] && cat <<EOF
case "\$-" in
	*i*)
		case "\$PS1" in
			*'smile'*) ;;
			*)
				alias n 1>&- 2>&- || . /etc/profile.d/kalua.sh
			;;
		esac
	;;
esac
EOF
