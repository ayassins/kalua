#!/bin/sh /etc/rc.common

. /tmp/loader

START=01

# this file is a workaround for changing (uci-)settings for already running nodes
# later we will split it into separate mysettings.ipk for each installation
# if in doubt, remove this file from your own build

force_dnsserver()
{
	local ip_wish="$1"	# TODO: support for list
	local server

	[ -n "$( _wifi get any mode ap )" ] && {
		for server in $( uci get 'dhcp.@dnsmasq[0].server' ); do {
			[ "$server" = "$ip_wish" ] || {
				uci del_list "dhcp.@dnsmasq[0].server=$server"
			}
		} done

		[ "$( uci get 'dhcp.@dnsmasq[0].server' )" = "$ip_wish" ] || {
			uci add_list "dhcp.@dnsmasq[0].server=$ip_wish"
		}
	}
}

date_is_after()
{
	test $( _system date unixtime ) -gt $( _system date 2unixtime "$1" )
}

uci_sanitize_wireless_macs()
{
	local funcname='uci_sanitize_wireless_macs'
	local file shortname radio interface mac mac_old mac_new index
	local summand=1
	local maclist_wireless=
	local maclist_all=

	# FIXME! https://bugs.lede-project.org/index.php?do=details&task_id=760
	for file in $( uci show wireless | grep 'macaddr' | cut -d'=' -f1 ); do uci del "$file"; done
	return

	for file in "$PERMDIR/netparam_iface-idx2mac-"*; do {
		[ -e "$file" ] && {
			read -r mac <"$file"
			index="$( echo "$file" | cut -d'-' -f3 )"

			_log it $funcname daemon info "preset: wireless.@wifi-iface[$index].macaddr=$mac"
			uci set "wireless.@wifi-iface[$index].macaddr=$mac"
		}
	} done

	# see '/etc/hotplug.d/iface/00-netparam'
	# all wireless macs
	for file in "$PERMDIR/netparam_phy-"[0-9]'-mac-'*; do {
		[ -e "$file" ] && {
			read -r mac <"$file"
			radio="$(     basename "$file" | cut -d'-' -f2 )"	# e.g. 0 or 1
			interface="$( basename "$file" | cut -d'-' -f4 )"	# e.g. wlanadhocRADIO1

			case "$interface" in
				'cfg'*)
					# e.g. cfg0f4d8f
				;;
				*)
					maclist_wireless="$maclist_wireless $mac,$radio,$interface"
					_log it $funcname daemon debug "wireless: $mac,$radio,$interface"
				;;
			esac
		}
	} done

	# all macs
	for file in "$PERMDIR/netparam_iface-"*'-mac'; do {
		[ -e "$file" ] && {
			read -r mac <"$file"

			case "$file" in
				*'_iface-cfg'*)
				;;
				*)
					shortname="$( basename "$file" | cut -d'-' -f2 )"
					_log it $funcname daemon debug "all_macs: $mac - $shortname"
					maclist_all="$maclist_all $mac"
				;;
			esac
		}
	} done

	# check each wireless mac if it's used twice, if so
	for mac in $( _list sorted "$maclist_wireless" ); do {
		interface="$(	echo "$mac" | cut -d',' -f3 )"		# e.g. wlanadhocRADIO1
		radio="$(	echo "$mac" | cut -d',' -f2 )"		# e.g. 0 or 1
		mac="$(		echo "$mac" | cut -d',' -f1 )"

		[ "$mac" = "$mac_old" ] && {
			_log it $funcname daemon info "same mac/phy '$mac/$radio/$interface' on different phy's: $maclist_wireless"

			loop init; while loop max 256; do {
				mac_new="$( _net macplus "$mac" "$summand" )"
				summand=$(( summand + 1 ))
				_list contains_element "$maclist_all" "$mac_new" || break
			} done

			index="$( _wifi get "$interface" index )"
			_log it $funcname daemon alert "setting: wireless.@wifi-iface[$index].macaddr='$mac_new' (was: '$mac')"
			uci set "wireless.@wifi-iface[$index].macaddr=$mac_new"
			mac="$mac_new"
		}

		mac_old="$mac"
	} done
}

uci_remove_section()
{
	local check_var="$1"	# e.g. network.@alias[].interface
	local check_value="$2"	# e.g. loopback
	local p1="$( echo "$check_var" | cut -d'[' -f1 )"
	local p2="$( echo "$check_var" | cut -d']' -f2 )"

	local i
	for i in $( seq 15 -1 0 ); do {
		while [ "$( uci -q get "${p1}[$i]${p2}" )" = "$check_value" ]; do {
			uci delete "${p1}[$i]"
		} done
	} done
}

uci_already_added()
{
	local config="$1"	# e.g. network
	local section="$2"	# e.g. alias
	#
	local item="$3"		# e.g. interface
	local wish="$4"		# e.g. lan
	#
	local item2="$5"	# e.g. ipaddr
	local wish2="$6"	# e.g. 10.10.43.33
	#
	local value i=0

	while value="$( uci -q get $config.@$section[$i].$item )"; do {
		if [ "$wish" = "$value" ]; then

			if [ -z "$wish2" ]; then
				return 0
			else
				value="$( uci -q get $config.@$section[$i].$item2 )"

				if [ "$wish2" = "$value" ]; then
					return 0
				else
					i=$(( i + 1 ))
				fi
			fi

			return 0
		else
			i=$(( i + 1 ))
		fi
	} done

	return 1
}

apply_olsr_roaming()
{
	local funcname='apply_olsr_roaming'
	local wired_networks="$1"		# e.g. 'lan' or 'lan wan'
	local special_ssid="$2"
	local index network list list_ap has_5ghz has_2ghz milliwatt disassoc_low_ack is_hybrid

#	local ssid2	# TODO: dhcp complains about missing IP on dev
#	ssid2="freifunk ($HOSTNAME"
#	ssid2="$( _sanitizer run "$ssid2" length:30 )"
#	ssid2="$ssid2)"
#	uci add wireless wifi-iface
#	uci set wireless.@wifi-iface[-1].network='wlan'
#	uci set wireless.@wifi-iface[-1].device='radio1'
#	uci set wireless.@wifi-iface[-1].mode='ap'
#	uci set wireless.@wifi-iface[-1].ssid="$ssid2"
#	uci set wireless.@wifi-iface[-1].ssid_donttouch='true'

	list_ap="$( _wifi get any mode ap ) $wired_networks"
	[ -z "$list_ap" ] && return 1

	# e.g. dnsmasq 2.66 or openwrt script are broken for DHCP-range
	[ $OPENWRT_REV -ge 41037 ] || return 1
	[ -e "/lib/modules/$( uname -r )/macvlan.ko" ] || return 1
	kmodule_force_activation 'macvlan'

	uci_remove_section 'network.@alias[].interface' 'mastergate'
	uci set network.mastergate='interface'			# here we collect all interfaces, see below
	uci set network.mastergate.type='bridge'		# bridge needed for multiple interfaces
	uci set network.mastergate.proto='static'		# list of ifnames is added below
	uci set network.mastergate.ipaddr="$ROAMING_GATEWAY"
	uci set network.mastergate.netmask="$( _net cidr2mask "$ROAMING_PRE" )"
	uci set network.mastergate.ifname=''			# is filled during upcoming index-loop

	# we occupy the existing 'wlan'-section (generated from apply_profile)
	uci set dhcp.wlan.interface='mastergate'

	# maybe also fill: 1, 3, 6, 12, 28 = ???
	uci del      dhcp.wlan.dhcp_option
	uci add_list dhcp.wlan.dhcp_option="3,$ROAMING_GATEWAY"	# same like 'option:router' is "option name => RFC 2132"
	uci add_list dhcp.wlan.dhcp_option="6,$ROAMING_DNS"

	uci set dhcp.wlan.leasetime='12h'	# very long: otherwise a ssh-session is lost when the IP changes...
	uci set dhcp.wlan.start="$ROAMING_DHCPSTART_LOCAL"
	uci set dhcp.wlan.limit='253'
	uci -q delete dhcp.wlan.netmask		# otherwise 'wlan.start' has no effect

	# FIXME! 2nd AP on same band does not work
	for index in $list_ap; do {
		if network="$( uci -q get "wireless.@wifi-iface[$index].network" )"; then
			# e.g. 'wlanRADIO1' 'wlan'

			case "$HARDWARE" in
				'Mercury MAC1200R'|'TP-LINK Archer C7 v2')
					# ath10k
					[ $OPENWRT_REV -ge 1002534 ] && {
						# better ath10k-CT firmware
						uci set "wireless.@wifi-iface[$index].disabled=0"
					}
				;;
				*)
					# force active
					bool_true "wireless.@wifi-iface[$index].disabled" && {
						_log it $funcname daemon debug "switching on wifi-iface: $index"
						uci set "wireless.@wifi-iface[$index].disabled=0"
					}
				;;
			esac

			if _wifi is2ghz "$index"; then
				has_2ghz='true'

				# https://wiki.openwrt.org/doc/uci/wireless#inactivity_timeout_options
				if [ -n "$special_ssid" ]; then
					disassoc_low_ack=0		# do not actively kick
				else
					disassoc_low_ack=1		# kick likely, if station is weak
				fi

				uci set "wireless.@wifi-iface[$index].disassoc_low_ack=$disassoc_low_ack"
				uci set "wireless.@wifi-iface[$index].max_inactivity=15"
			else
				has_5ghz='true'

				uci set "wireless.@wifi-iface[$index].disassoc_low_ack=1"	# not sticky, but
				uci set "wireless.@wifi-iface[$index].max_inactivity=30"	# a bit longer than 2ghz
			fi
		else
			# e.g. 'lan'
			network="$index"
			uci delete dhcp.$index
		fi

		# omit dnsmasq-logerrors: in roaming mode we should
		# only answer on 'mastergate' not e.g. 'wlan' (or even 'lan')
		case " $( uci -q get dhcp.@dnsmasq[0].notinterface ) " in
			*" $network "*)
				# only add once
			;;
			*)
				uci add_list dhcp.@dnsmasq[0].notinterface="$network"
			;;
		esac

		uci set network.roaming${index}='device'
		uci set network.roaming${index}.type='macvlan'
		uci set network.roaming${index}.name="roaming${index}"
		uci set network.roaming${index}.ifname="@$network"
		uci set network.roaming${index}.macaddr='02:ff:ff:ff:00:00'		# same on all bands

		list="$( uci -q get network.mastergate.ifname )"
		case "$list" in
			*"roaming${index}"*)
			;;
			*)
				uci set network.mastergate.ifname="${list}${list:+ }roaming${index}"
			;;
		esac
	} done

	uci_already_added 'olsrd' 'Hna4' 'netaddr' "$ROAMING_NET_LOCAL" || {
		uci add olsrd Hna4 >/dev/null
		uci set olsrd.@Hna4[-1].netaddr="$ROAMING_NET_LOCAL"
		uci set olsrd.@Hna4[-1].netmask="$( _net cidr2mask "$ROAMING_PRE_LOCAL" )"
	}

	config_add_alias 'mastergate' "$ROAMING_ADR_LOCAL/$ROAMING_PRE_LOCAL"

	# TODO: hostapd: band-steering
	# https://forum.openwrt.org/viewtopic.php?id=33335

	if _wifi longshot_name >/dev/null; then
		_wifi set ap anyfreq 'off'
	else
		_wifi set ap 2ghz distance '100'	# test if this speeds up roaming? CoverageClass1 = 450m
		_wifi set ap 2ghz beacon_int '250'	# better powersafe and not too slow
		_wifi set ap 2ghz txpower '10'

		_wifi set ap 5ghz distance '100'
		_wifi set ap 5ghz beacon_int  '50'	# maybe this helps better sticking to 5ghz
		_wifi set ap 5ghz txpower '20'

		_wifi set ap anyfreq mcast_rate ''	# use defaults

		# TODO: be band-specific
		[ -n "$( _wifi get any mode adhoc )" ] && is_hybrid='true'	# FIXME! 802.11s?

#		# single band 5ghz AP
		[ -n "$has_5ghz" -a -z "$has_2ghz" ] && {
			[ -n "$is_hybrid" ] && {
				:
#				_wifi set ap 5ghz beacon_int '50'
#				_wifi set ap 5ghz txpower '20'
			}
		}

#		# TODO: uci var for describing "next to me/wired is already an adhoc-only device, so do not power up my adhoc"
#		# single band 2ghz AP
		[ -z "$has_5ghz" -a -n "$has_2ghz" ] && {
			[ -n "$is_hybrid" ] && {
				:
#				# FIXME! beacon_int in 1 mesh MUST be the same
#				_wifi set ap 2ghz beacon_int '125'
#				_wifi set ap 2ghz txpower '20'
			}
		}

		# this should make the roaming-better, because the client does not 'glue' that much at an AP
		# TODO: do not if nexthop is wired
		[ -n "$has_2ghz" ] && {
			bool_true 'system.@monitoring[0].txpower_auto' && {
				milliwatt=-1	# means: go lower and lower by 1 milliwatt
				echo >>$SCHEDULER "_wifi reduce_txpower_if_compatible_roaming_nodes_are_near 2ghz $milliwatt"
			}
		}
	fi

	return 0
}

apply_olsr_speed()
{
	local value="$1"
	local i

	# setting interface-mode (ether/mesh) is only valid with 'etx_ffeth'
	# otherwise the daemon fails to start
	[ "$( uci -q get 'olsrd.@olsrd[0].LinkQualityAlgorithm' )" != 'etx_ffeth' ] && {
		i=0
		while uci -q get "olsrd.@Interface[$i]" >/dev/null; do {
			uci delete "olsrd.@Interface[$i].Mode" 2>/dev/null
			i=$(( i + 1 ))
		} done
	}

	# search for the string, which was added with this value
	# https://github.com/openwrt-routing/packages/commit/34e1ff5702372099599f764d272069ba914661c4
	grep -sq 'sven-ola' '/etc/init.d/olsrd' '/lib/functions/olsrd.sh' && {
		i=0
		while uci -q get "olsrd.@Interface[$i]" >/dev/null; do {
			uci set olsrd.@Interface[$i].speed="$value"
			i=$(( i + 1 ))
		} done
	}
}

apply_olsr_watchdog()
{
	local idx

	for idx in 0 1 2 3 4 5 6 7 8; do {
		case "$( uci -q get olsrd.@LoadPlugin\[$idx\].library )" in
			*'nameservice.so'*)
				# see S51cron/patch_udhcpc_script()
				uci set olsrd.@LoadPlugin\[$idx\].name_change_script='/etc/udhcpc.user'
				return 0
			;;
		esac
	} done
}

config_add_alias()
{
	local network="$1"		# e.g. 'lan'
	local ip_and_mask="$2"		# e.g. '10.20.30.9/24'
	local gateway="$3"		# e.g. '10.20.30.1' or <empty>
	local ip mask

	ip="${ip_and_mask%/*}"
	mask="${ip_and_mask#*/}"
	mask="$( _net cidr2mask "$mask" )"

	uci_already_added 'network' 'alias' \
			  'interface' "$network" \
			  'ipaddr' "$ip" || {
		uci add network alias >/dev/null
		uci set network.@alias[-1].interface="$network"
		uci set network.@alias[-1].proto='static'
		uci set network.@alias[-1].ipaddr="$ip"
		uci set network.@alias[-1].netmask="$mask"
		[ -n "$gateway" ] && uci set network.@alias[-1].gateway="$gateway"
	}
}

olsr_disable_interface()
{
	local interface="$1"	# e.g. innercityVPN
	local name
	local i=0

	while name="$( uci -q get olsrd.@Interface[$i].interface )"; do {
		if [ "$name" = "$interface" ]; then
			uci set olsrd.@Interface[$i].ignore='1'
			return
		else
			i=$(( i + 1 ))
		fi
	} done
}

hostapd_activate_coredump()
{
	# not needed for >= r39139 (why?)
	[ -e '/lib/wifi/hostapd.sh' ] && {
		grep -q "unlimited" "/lib/wifi/hostapd.sh" || {
			sed -i 's/hostapd -P/ulimit unlimited; &/' '/lib/wifi/hostapd.sh'
		}
	}

	# since r38988
	[ -e '/lib/netifd/wireless/mac80211.sh' ] && {
		grep -q 'unlimited' '/lib/netifd/wireless/mac80211.sh' || {
			sed -i 's|/usr/sbin/hostapd -P|ulimit unlimited; &|g' '/lib/netifd/wireless/mac80211.sh'
		}
	}
}

kmodule_is_deactivated()
{
	local kmodule="$1"
	local file

	# e.g. 'sch_teql' in /etc/modules.d/73-sched
	for file in /etc/modules.d/*; do {
		grep -q ^"# $kmodule" "$file" && return 0
		grep -q  ^"#$kmodule" "$file" && return 0
	} done

	return 1
}

kmodule_force_activation()
{
	local kmodule="$1"
	local file

	# e.g. 'sch_teql' in /etc/modules.d/73-sched
	for file in /etc/modules.d/*; do {
		grep -q ^"# $kmodule" "$file" && {
			sed -i 's/^[^a-z]*//' "$file"
			return 0
		}

		grep -q ^"#$kmodule" "$file" && {
			sed -i 's/^[^a-z]*//' "$file"
			return 0
		}
	} done
}

kmodule_force_deactivation()
{
	local kmodule="$1"
	local file

	# e.g. 'sch_teql' in /etc/modules.d/73-sched
	for file in /etc/modules.d/*; do {
		grep -q ^"$kmodule" "$file" && {
			sed -i "s/^$kmodule/# &/" "$file"
			return 0
		}
	} done
}

kmodules_group_deactivate()
{
	local group="$1"	# e.g. 'ipt-*'
	local file

	for file in /etc/modules.d/$group ; do {
		file="$( basename "$file" )"
		kmodule_is_deactivated "$file" || kmodule_force_deactivation "$file"
	} done
}

kmodules_group_activate()
{
	local group="$1"	# e.g. 'ipt-*'
	local file

	for file in /etc/modules.d/$group ; do {
		file="$( basename "$file" )"
		kmodule_is_deactivated "$file" && kmodule_force_activation "$file"
	} done
}

integer2fourhex()	# e.g. 8 -> 00:08
{			# fixme! max = 999 fixme! generalize it, join with bssid_wellformed()
	if [ $1 -lt 100 ]; then
		if [ $1 -lt 10 ]; then
			echo "00:0$1"
		else
			echo "00:$1"
		fi
	else
		echo "0$( echo "$1" | cut -b 1 ):$( echo "$1" | cut -b 2-3 )"
	fi
}

apply_cronwatchdog()	# cron-watchdog via netifd-dhcp-hotplug-call: iface/60-dyndns
{
	local option="$1"

	# https://www.mail-archive.com/dnsmasq-discuss@lists.thekelleys.org.uk/msg11369.html
	dnsmasq -v | grep -q '2.77test5' && option='set_inactive'

	[ "$option" = 'set_inactive' ] && {
		uci_remove_section "network.@alias[].interface" 'loopback'
		uci_remove_section "dhcp.@host[].name" 'lo-alias'
		uci_remove_section "dhcp.@dhcp[].interface" 'loopback'

		[ -e '/www/netifd_dhcp_watchdog' ] && rm '/www/netifd_dhcp_watchdog'

		pidof dnsmasq >/dev/null && /etc/init.d/dnsmasq restart
		return 0
	}

	uci_remove_section "network.@alias[].interface" 'loopback'
	uci add network 'alias' >/dev/null
	uci set network.@alias[-1].interface='loopback'
	uci set network.@alias[-1].proto='dhcp'
	uci set network.@alias[-1].defaultroute='0'	# do not apply default route
	uci set network.@alias[-1].peerdns='0'		# and DNS

	uci_remove_section "dhcp.@host[].name" 'lo-alias'
	uci add dhcp 'host' >/dev/null
	uci set dhcp.@host[-1].ip='127.0.0.2'
	uci set dhcp.@host[-1].mac='00:00:00:00:00:00'
	uci set dhcp.@host[-1].name='lo-alias'

	uci_remove_section "dhcp.@dhcp[].interface" 'loopback'
	uci add dhcp 'dhcp' >/dev/null
	uci set dhcp.@dhcp[-1].interface='loopback'
	uci set dhcp.@dhcp[-1].start='2'
	uci set dhcp.@dhcp[-1].limit='2'
	uci set dhcp.@dhcp[-1].leasetime='1h'
	uci set dhcp.@dhcp[-1].force='1'
	uci set dhcp.@dhcp[-1].ignore='0'
}

boot()
{
	local list pattern daemon i j good_hash ssid=

	mkdir -p "$( dirname "$( uci -q get dhcp.@dnsmasq[0].leasefile )" )"

	for daemon in ulogd firewall sysntpd; do {
		[ -e "/etc/init.d/$daemon" ] || continue
		/etc/init.d/$daemon enabled && /etc/init.d/$daemon disable
	} done

	# work around a hanging network during shutdown
	grep -sq ^'STOP=' '/etc/init.d/network' && {
		sed -i 's/^STOP=/# &/' '/etc/init.d/network'
	}

	# work around safed conffile during sysupgrade
	grep -Fsq '/etc/profile.d' '/rom/etc/profile' && {
		grep -Fq '/etc/profile.d' '/etc/profile' || {
			cp '/rom/etc/profile' '/etc/profile'
		}
	}

	# FIXME! only for transition/renaming 'translate -> i18n' and 'wget -> curl'
	[ -e '/etc/kalua/translate' ] && rm '/etc/kalua/translate'
	[ -e '/etc/kalua/wget' ] && rm '/etc/kalua/wget'

	# if for some reason 'loopback' is missing (this adds an unnamed section)
	# TODO: we also need to check for 'network.@loopback[0].ifname'
	uci get network.loopback.ifname >/dev/null || {
		uci add network 'loopback' >/dev/null
		uci set network.@loopback[-1].interface='loopback'
		uci set network.@loopback[-1].ifname='lo'
		uci set network.@loopback[-1].proto='static'
		uci set network.@loopback[-1].ipaddr='127.0.0.1'
		uci set network.@loopback[-1].netmask='255.0.0.0'
	}

	# if for some reason 'lan' is missing
	# TODO: we also need to check for 'network.@lan[0].ifname'
	uci -q get network.lan.ifname >/dev/null || {
		uci add network 'lan' >/dev/null
		uci set network.@lan[-1].interface='lan'
		uci set network.@lan[-1].ifname='eth0'
		uci set network.@lan[-1].proto='static'
		uci set network.@lan[-1].ipaddr="$(  _ipsystem getvar 'LANADR' )"
		uci set network.@lan[-1].netmask="$( _ipsystem getvar 'LANMSK' )"
	}

	if [ -f '/etc/init.d/apply_profile' ]; then
		[ -s '/www/cgi-bin-welcome.sh'	] || ln -s '/www/cgi-bin-welcome'   '/www/cgi-bin-welcome.sh'
		[ -s '/www/cgi-bin-sql.sh'	] || ln -s '/www/cgi-bin-sql'	    '/www/cgi-bin-sql.sh'
		[ -s '/www/cgi-bin-tool.sh'	] || ln -s '/www/cgi-bin-tool_fff+' '/www/cgi-bin-tool.sh'

		uci set uhttpd.main.interpreter='.sh=/bin/ash'

		# https://dev.openwrt.org/changeset/46688/trunk
		uci set uhttpd.px5g.country='DE'
		uci set uhttpd.px5g.state='Thuringia'
		uci set uhttpd.px5g.location='Weimar'

		while uci del olsrd.@LoadPlugin[0]; do :; done
		while uci del network.@loopback[0]; do :; done

		if [ -n "$LOWMEM" ]; then
			kmodules_group_deactivate '*'
			kmodules_group_activate   'zram'
			kmodules_group_activate   'lib-lzo'
			kmodules_group_activate   'b44'

#			kmodules_group_deactivate  'ipt-*'
#			kmodule_force_deactivation 'b43'
#			kmodule_force_deactivation 'mac80211'
#			kmodule_force_deactivation 'cfg80211'	# includes compat
#			kmodule_force_deactivation 'ipv6'
#			kmodule_force_deactivation 'ip6tables'

			/etc/init.d/odhcpd disable
		else
			apply_cronwatchdog
		fi

		return 0
	else
		# https://lists.openwrt.org/pipermail/openwrt-devel/2015-January/030887.html
		rm /etc/uci-defaults/* 2>/dev/null

		[ -n "$LOWMEM" -a ! -e '/www/kmods_fixed' ] && {
			touch '/www/kmods_fixed'

			kmodules_group_deactivate '*'		# unneeded, but does not hurt (for old nodes)
			kmodules_group_activate   'zram'
			kmodules_group_activate   'lib-lzo'
			kmodules_group_activate   'b44'

			# gpio_button_hotplug leds_gpio - needed?

			kmodule_force_activation 'b43'
			kmodule_force_activation 'mac80211'
			kmodule_force_activation 'cfg80211'	# includes compat
			kmodule_force_activation 'ath'
			kmodule_force_activation 'ath5k'
			# allow 'switch', 'diag'

			needs_full_kmodules()
			{
				_net local_inet_offer >/dev/null && return 0
				test -e '/www/SIMPLE_MESHNODE' && return 1

				return 0
			}

			# for F in /etc/modules.d/*; do echo "# $F"; cat $F; done
			needs_full_kmodules && {
				kmodule_force_activation 'ipt-core'
						# has:  x_tables xt_tcpudp ip_tables iptable_filter iptable_mangle xt_limit
						#       xt_mac xt_multiport xt_comment ipt_LOG xt_TCPMSS ipt_REJECT
						# need: x_tables xt_tcpudp ip_tables iptable_filter iptable_mangle   ---
						#       xt_mac    ---          ---      ---    xt_TCPMSS ipt_REJECT

				kmodule_force_activation 'ipt-conntrack'
						# has:  nf_conntrack nf_defrag_ipv4 nf_conntrack_ipv4 xt_state
						#       iptable_raw xt_NOTRACK xt_CT xt_conntrack
						# need: nf_conntrack nf_defrag_ipv4 nf_conntrack_ipv4   ---
						#           ---        ---      ---     ---

				kmodule_force_activation 'ipt-nat'
						# has:  nf_nat iptable_nat ipt_MASQUERADE
						# need: nf_nat iptable_nat     ---

				# TODO:
				# at least here, it needs a function which enables
				# a specific kernel-module, no matter in which file
				kmodule_force_activation 'ipt-ipopt'
						# has:  xt_mark + sehr viele
						# need: xt_mark
			}
		}
	fi

	[ -x '/etc/init.d/olsrd' ] || uci set olsrd.@meta[0].no_watching='true'
	apply_olsr_speed '6'
	case "$ANYADR" in
		'')
		;;
		192.168.1.1)
			uci set olsrd.@olsrd[0].MainIp="$( _ipsystem getvar LANADR )"
		;;
		*)
			uci set olsrd.@olsrd[0].MainIp="$ANYADR"
		;;
	esac

	case "$( uci -q get network.wan.proto )" in
		'ppp'*)
			olsr_disable_interface 'wan'	# TODO: for all interfaces with public-ip
		;;
	esac

	echo >>$SCHEDULER '_olsr throttle_traffic restart'	# always after update_pmu()
	# uci_sanitize_wireless_macs

	uci set system.@system[0].wifi_no_predistortion='true'
	uci set system.@monitoring[0].roaming_kick_bad='true'

	kmodule_force_deactivation sch_teql
	kmodule_force_deactivation ifb

	[ -e "$PERMDIR/manually_started:firmware_download" ] && {
		if _file age "$PERMDIR/manually_started:firmware_download" -gt 86400; then
			rm -f "$PERMDIR/manually_started:firmware_download"
		else
			# safe some memory
			_wifi set ap any 'off'
			ROAMING='false'
		fi
	}

	command -v 'hostapd' >/dev/null || {
		[ -n "$( _wifi get any mode ap )" ] && {
			# otherwise e.g. IBSS does not come up
			_wifi set ap any 'off'
			ROAMING='false'
		}
	}

	case "$HARDWARE" in
		'Mercury MAC1200R'|'TP-LINK Archer C7 v2')
			# dirty hack: ath10k cannot do hybrid (ibss/ap mixed) mode:
			_wifi set ap 5ghz 'off'
		;;
		'La Fonera 2.0N')
			# TODO: query possible interface combinations
			# disable adhoc for now
			# https://lists.openwrt.org/pipermail/openwrt-devel/2013-June/020559.html
			_wifi set adhoc any 'off'
			_wifi set ap    any 'on'
		;;
	esac

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*|'TP-LINK TL-WR703N v1')
			# we use the button to trigger an WPS-action/soundplayer
			[ -e '/etc/rc.button/reset' ] && rm '/etc/rc.button/reset'
		;;
	esac

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*|'MQmaker WiTi')
			fixup_phy_path_on_multiradio_device()
			{
				local funcname='fixup_phy_path_on_multiradio_device'
				local phy uci_path hwmode
				local real_phy0="$( readlink -f /sys/class/ieee80211/phy0/device | sed 's|/sys/devices/platform/||' )"	# 5ghz
				local real_phy1="$( readlink -f /sys/class/ieee80211/phy1/device | sed 's|/sys/devices/platform/||' )"	# 2ghz


				for phy in 0 1 2 3; do {
					uci_path="$( uci -q get wireless.radio${phy}.path )"
					hwmode="$(   uci -q get wireless.radio${phy}.hwmode )"

					case "$hwmode" in
						11a|11na)
							[ "$uci_path" = "$real_phy0" ] || {
								_log it $funcname daemon info "5ghz radio$phy: uci set wireless.radio${phy}.path=$real_phy0"
							}

							[ "$hwmode" = '11na' ] || {
								_log it $funcname daemon info "5ghz radio$phy: uci set wireless.radio${phy}.hwmode=11na"
							}
						;;
						11g|11ng)
							[ "$uci_path" = "$real_phy1" ] || {
								_log it $funcname daemon info "2ghz radio$phy: uci set wireless.radio${phy}.path=$real_phy1"
							}

							[ "$hwmode" = '11ng' ] || {
								_log it $funcname daemon info "2ghz radio$phy: uci set wireless.radio${phy}.hwmode=11ng"
							}
						;;
						'')
							if   [ "$uci_path" = "$real_phy0" ]; then
								_log it $funcname daemon info "5ghz radio$phy: uci set wireless.radio${phy}.hwmode=11na"
							elif [ "$uci_path" = "$real_phy1" ]; then
								_log it $funcname daemon info "2ghz radio$phy: uci set wireless.radio${phy}.hwmode=11ng"
							elif [ -z "$uci_path" ]; then
								:
							else
								_log it $funcname daemon info "uci path bad?: radio$phy: $uci_path"
							fi
						;;
						*)
							_log it $funcname daemon info "hwmode '$hwmode' = unknown for radio$phy"
						;;
					esac
				} done
			}

			fixup_phy_path_on_multiradio_device
		;;
	esac

	case "$HARDWARE" in
		'TP-LINK TL-WDR4900'*)
			# dirty-fix default mac: 00:04:9f:ef:01:01
			# https://dev.openwrt.org/ticket/14714

			[ -e '/www/monitoring.wifimac' -a $OPENWRT_REV -lt 48645 ] && {		# wifimac is correct
				bytes_get(){ cut -b $1,$2 '/www/monitoring.wifimac'; }
				wmac="$( bytes_get 1 2 ):$( bytes_get 3 4 ):$( bytes_get 5 6 )"
				wmac="$wmac:00:$( integer2fourhex "$NODENUMBER" )"

				[ -z "$( uci -q get network.lan.macaddr )" ] && uci set network.lan.macaddr="$wmac"
				[ -z "$( uci -q get network.wan.macaddr )" ] && uci set network.wan.macaddr="$wmac"
			}
		;;
	esac

	# workaround:
	grep -sq 'Wartungsmodus' '/etc/config/wireless' && {
		sed -i "s/option ssid.*/option ssid '$( _weblogin metadata_locationname )'/g" '/etc/config/wireless'
	}

	_firmware get_usecase 'NAS' && {
		uci set system.@monitoring[0].ignore_load='true'
		uci set system.@system[0].avoid_autoreboot='true'
	}

	_firmware get_usecase 'USBprinter' && {
		uci set p910nd.@p910nd[0].enabled='1'
	}

	uci -q set network.innercityVPN.mtu='1280'		# see vpn()

	uci set sms.@sms[0].username='gforce'
	uci set sms.@sms[0].password='mvemjsunpsms77'

	_http robotstxt_generate

	[ -e '/www/cgi-bin-status.html' ] || {
		_http redirect '302' 'cgi-bin-status.sh' 'html_only' >'/www/cgi-bin-status.html'
	}

	# disable OLSRd1 - IPv6
	[ -e '/etc/config/olsrd6' ] && {
		uci set olsrd6.@olsrd[0].disabled='1'
		/etc/init.d/olsrd6 enabled && {
			/etc/init.d/olsrd6 disable
			/etc/init.d/olsrd6 stop
		}
	}

	[ -z "$( uci -q get firewall.@adblock[0].enabled )" ] && {
		[ -e '/etc/config/firewall' ] || touch '/etc/config/firewall'
		uci show firewall.@adblock[0] >/dev/null || {
			uci add firewall adblock
			uci set firewall.@adblock[-1].enabled='false'
		}
	}

	# mark end of startup-sequence
	grep -q "ENDBOOT" '/etc/init.d/done' || sed -i 's|^}|\n	touch /tmp/ENDBOOT\n}|' '/etc/init.d/done'

	pattern='procd_open_instance'
	file='/etc/init.d/dnsmasq'
	grep -q "$pattern"$ "$file" && {
		sed -i "s/${pattern}$/&; procd_set_param limits core='unlimited'/" "$file"
	}

	# fix sysupgrade, see patch in r39169:
	[ $OPENWRT_REV -eq 39139 ] && {
		grep -q ' mount ' '/etc/init.d/boot' && {
			sed -i 's| mount | /bin/mount |' '/etc/init.d/boot'
			sed -i 's|umount |/bin/umount |' '/etc/init.d/umount'
			sed -i 's|mount |/bin/mount |' '/lib/functions.sh'
			sed -i 's|umount -l |/bin/umount -l |' '/lib/upgrade/common.sh'
			sed -i 's|mount -o |/bin/mount -o |' '/lib/upgrade/common.sh'
			sed -i 's#mount | #/bin/mount | #' '/lib/upgrade/common.sh'
		}
	}

	# https://dev.openwrt.org/ticket/14705
	[ $OPENWRT_REV -le 39218 ] && {
		file='/lib/netifd/wireless/mac80211.sh'
		pattern='json_get_vars bssid ssid basic_rate key'
		grep -sq "$pattern"$ "$file" && {
			sed -i "s/$pattern/$pattern mcast_rate/" "$file"
		}
	}

	# no DNS-responses on WAN from outside
	[ "$( uci -q get dhcp.@dnsmasq[0].notinterface )" = 'wan' ] || {
		_net local_inet_offer >/dev/null && {
			uci set dhcp.@dnsmasq[0].notinterface='wan'	# add pppoe-wan?
		}
	}

	[ $OPENWRT_REV -eq 38043 ] && {
		grep -q 'sleep 30' '/etc/init.d/olsrd' || {
			sed -i 's/^start() {$/&\nsleep 30/' '/etc/init.d/olsrd'
		}
	}

	# TODO: be more exact - set for correct radioX
	[ -e "/lib/modules/$( uname -r )/ath9k.ko" ] && {
		# enforce 802.11n
		# https://dev.openwrt.org/ticket/17748
		# https://dev.openwrt.org/ticket/17541
		_wifi set anymode anyfreq htmode HT20
	}

	# AP = autochannel
	case "$CONFIG_PROFILE" in
		*_ap)
			# our special country 'Micronesia' = FM with valid channel 1-11 and 36-48
			if grep -s 'REGHACK:' '/etc/openwrt_patches' | grep -q ' FM '; then
				_wifi set ap 2ghz channel 'auto'
				_wifi set ap 5ghz channel 'auto'
			else
				# typically the mesh is on channel 11
				_wifi set ap 2ghz channel "$( _math random_integer 1 11 )"

				# TODO: use only non_dfs_channels
				# iw phy1 info | grep '* .... MHz ' | cut -d'[' -f2 | cut -d']' -f1 | grep -v 'DFS'
				_wifi set ap 5ghz channel \
					"$( _list random_element '36 40 44 48 52 56 60 64 100 104 108 112 116 120 124 128 132 136 140 149 153 157 161 165' )"
			fi

			case "$( uci -q get wireless.radio0.htmode )" in
				'HT40'*)
					uci set wireless.radio0.htmode='HT20'
				;;
			esac
		;;
	esac

	[ -n "$LOWMEM" ] && {
		/etc/init.d/6relayd enabled && /etc/init.d/6relayd disable	# removed in r40893
		/etc/init.d/odhcpd  enabled && /etc/init.d/odhcpd  disable

		uci show network.wan6 >/dev/null && {
			uci set network.wan6.disabled='1'
			uci set network.wan6.ifname=
		}
	}

	# e.g.:
	# [...]
	# ::askconsole:/usr/libexec/login.sh
	# tty1::askfirst:/usr/libexec/login.sh

	if   [ -e '/www/serial_enabled' -o "$HARDWARE" = 'UML' -o $OPENWRT_REV -eq 0 ]; then
		# enable if not done yet:
		grep '::askconsole:' '/etc/inittab' | grep -q ^'#' && sed -i 's/^[^a-z:]*//g' '/etc/inittab'
	elif test $( _system ram_size ) -gt 32768; then
		# enable if not done yet:
		grep '::askconsole:' '/etc/inittab' | grep -q ^'#' && sed -i 's/^[^a-z:]*//g' '/etc/inittab'
	elif grep -qv ^'#' '/etc/inittab'; then
		# disable if not done yet:
		grep '::askconsole:' '/etc/inittab' | grep -q ^'#' || sed -i 's/^.*::askconsole:.*/# &/' '/etc/inittab'
		grep '::askfirst:'   '/etc/inittab' | grep -q ^'#' || sed -i 's/^.*::askfirst:.*/# &/'   '/etc/inittab'
	fi

	grep ^'#' /etc/inittab | _log it inittab-disabled daemon debug

	uci set system.@admin[0].mail="$( echo 'technik|bittorf-wireless.de' | sed 's/|/@/g' )"

	# mail: send via scp OR 0ldskool
	case "$CONFIG_PROFILE" in
		liszt28*)
			uci set mail.@smtp[0].mail='logins@bluebottle.com'
			uci set mail.@smtp[0].auth='bastian@10.63.2.34:kalua_mail'
		;;
		ffweimar*)
			# needs setup / concept
		;;
		*)
			uci set mail.@smtp[0].mail='logins@bluebottle.com'
			uci set mail.@smtp[0].auth='-P 222 bastian@bwireless.mooo.com:kalua_mail'
		;;
	esac

	case "$CONFIG_PROFILE" in
		malchow*|ilm1*|tkolleg*|fparkssee*|marinapark*|aschbach*)
			uci set system.@monitoring[0].report_daily_stats='true'
		;;
		liszt28*|rehungen*|boltenhagen*|castelfalfi*|berlinle*|giancarlo*)
			uci set system.@monitoring[0].report_daily_stats='true'
		;;
	esac

	uci set system.@monitoring[0].serverip='84.38.67.43'

	if [ -n "$LOWMEM" ]; then
		uci delete 'dhcp.@dnsmasq[0].dhcpscript' 2>/dev/null

		case "$CONFIG_PROFILE" in
			*_ap)
				# activate on all lowmem-devices when unset
				[ -z "$( uci get olsrd.@meta[0].hnaslave )" ] && {
					_net local_inet_offer >/dev/null || uci set olsrd.@meta[0].hnaslave='true'
				}
			;;
			*_adhoc)
				[ -e "/www/SIMPLE_MESHNODE" ] || {
					# unforce stricter kmodule unloading
					touch "/www/SIMPLE_MESHNODE"
					rm "/www/GOOD_MODULE_UNLOAD"
				}
			;;
		esac

		uci set uhttpd.main.redirect_https='0'
		uci set uhttpd.main.interpreter='.sh=/bin/ash'
		uci set dhcp.@dnsmasq[0].cachesize='100'		# ~45k
	else
		uci set uhttpd.main.redirect_https='0'
		uci set uhttpd.main.interpreter='.sh=/bin/ash'
		uci set dhcp.@dnsmasq[0].cachesize='1000'		# ~450 bytes/entry = 450k

		if [ $( _system ram_size ) -gt 32768 ]; then
			uci set uhttpd.main.max_requests='10'
		else
			uci set uhttpd.main.max_requests='3'
		fi

		# https://dev.openwrt.org/changeset/22589
		uci set uhttpd.main.rfc1918_filter='0'
		uci set uhttpd.main.listen_http='80'
		if [ -e "/usr/lib/uhttpd_tls.so" -o -e "/usr/lib/opkg/info/uhttpd-mod-tls.list" ]; then
			uci set uhttpd.main.listen_https='443'
		else
			uci -q delete uhttpd.main.listen_https
		fi
	fi

	ssh_active()
	{
		/etc/init.d/dropbear 'enabled' || /etc/init.d/dropbear 'enable'
	}

	ssh_inactive()
	{
		/etc/init.d/dropbear 'enabled' && /etc/init.d/dropbear 'disable'
		touch '/tmp/service_ssh_nowatching'
	}

	if   [ $( _system ram_size ) -gt 32768 ]; then
		ssh_active
		apply_cronwatchdog
		uci set system.@system[0].log_size='2048'
	elif [ -n "$LOWMEM" ]; then
		ssh_inactive
		apply_cronwatchdog 'set_inactive'
	else
		if [ $OPENWRT_REV -ge $LEDE_REV ]; then
			ssh_inactive
			apply_cronwatchdog 'set_inactive'
		else
			ssh_active
			apply_cronwatchdog
		fi
	fi

	case "$CONFIG_PROFILE" in
		apphalle*)
			list="0174/3564025"
		;;
		schoeneck*)
			list="01729094456"
		;;
		aschbach*|hotello*)
			list="01728117657 01727772555 01775906689"
		;;
		liszt28*)
			list=
		;;
		spbansin*|itzehoe*)
			list="01601531855"
		;;
		tkolleg*)
			list="01714338506"
		;;
		satama*)
			# list="016096378028"
		;;
		ejbw*)
			list="01622666169"	# lars
		;;
		rehungen*)
			list=
		;;
		malchow*)
			list='01736234581'
		;;
	esac
	uci set sms.@sms[0].admin="0176/24223419 $list"

	# active for all (when local inet-offer):
	# see /usr/sbin/cron.reverse_ssh_tunnel
	uci set system.@monitoring[0].maintenance='reverse_sshtunnel'
#	uci set system.@monitoring[0].maintenance_ports='22 80'

	local up down unshaped mac
	case "$CONFIG_PROFILE" in
		apphalle*)
			up=384kbit
			down=3mbit
		;;
		rehungen*)
			case "$NODENUMBER" in
				36)
					# haupt52 (was: 16mbit)
					up=64kbit
					down=64kbit
				;;
				37|76|77|92|95)
					up=768kbit	# haupt25|schuetz17
					down=16mbit
				;;
				106|107|30|108|110|43|44|66|67|97|20|21)
					# breite6|ONEklausg70|schuetz2|101b|haupt15|ONEhaupt43a|haupt70
					up=768kbit
					down=10mbit
				;;
				*)
					up=768kbit
					down=6mbit
				;;
			esac
		;;
		limona*)
			up=768kbit
			down=8mbit
		;;
		leonardo*|castelfalfi*|adagio*)
			up=768kbit
			down=6mbit
		;;
		hotello*)
			up=512kbit
			down=4mbit
		;;
		liszt28*)
			# R30mb|T61|f36NAS|schlachtNAS|danny|ApplePhotograf|ralfRadio
			unshaped='70:1a:04:b1:5f:cf 00:13:e8:82:7e:4b 02:50:43:ab:1c:91 02:50:43:34:25:bc 9c:b7:0d:a2:49:a5 5c:96:9d:7a:9f:8d 00:90:3e:fc:81:c2'
			up=384kbit
			down=1500kbit
		;;
		ffweimar*)
		;;
		*)
			up=128kbit
			down=1mbit
		;;
	esac

	[ -n "$up" -a -n "$down" ] && {
		uci set system.@weblogin[0].default_speed_up="$up"
		uci set system.@weblogin[0].default_speed_down="$down"
	}

	uci -q get system.@weblogin[0].mac_unshaped >/dev/null && uci delete 'system.@weblogin[0].mac_unshaped'
	for mac in $unshaped; do {
		uci -q get "system.@weblogin[0].mac_unshaped" | grep -q "$mac" || {
			uci add_list system.@weblogin[0].mac_unshaped="$mac"
		}
	} done


	case "$CONFIG_PROFILE" in
		fparkssee*)
			uci set system.@weblogin[0].gateway_check='10.63.222.33'
		;;
		satama*)
			uci set system.@weblogin[0].gateway_check='10.63.119.33'
		;;
		marinapark*)
			uci set system.@weblogin[0].gateway_check='10.63.10.33'
			uci set system.@monitoring[0].maintenance_force='true'		# FIXME!
		;;
		marinabh*)
			case "$NODENUMBER" in
				10)
					uci set system.@monitoring[0].maintenance_force='true'
				;;
				2)
					uci del system.@monitoring[0].maintenance
				;;
			esac
		;;
	esac

	# will be changed, when roaming() is called
	for INDEX in $( _wifi get any mode ap ); do {
		uci set "wireless.@wifi-iface[$INDEX].disassoc_low_ack=0"
	} done

	# let wifi-dhcp be on 2ghz - till we fix it
	# e.g. TPLINK 4900 has 2ghz on 2nd wifi-phy
	for INDEX in $( _wifi get any mode ap ); do {
		_wifi is2ghz $INDEX && {
			NAME="$( uci -q get "wireless.@wifi-iface[$INDEX].network" )"
			uci set dhcp.wlan.interface="$NAME"
			break
		}
	} done

	# will be changed, when roaming() is called
	_wifi set ap 5ghz 'off'
	uci set system.@weblogin[0].redirect_dns='true'

	# disable wan6-dhcp if wan4-proto = static
	[ "$( uci -q get network.wan.proto )" = 'static' ] && {
		uci -q set network.wan6.disabled='1'
	}

	case "$HARDWARE" in
		'xxxTP-LINK Archer C6U')
			# 5ghz/mt7615e crashes on bootup
			_wifi set anymode anyfreq off
			_wifi set anymode 2ghz on
		;;
	esac

	case "$CONFIG_PROFILE" in
		itzehoe*)
			uci set olsrd.@meta[0].hnaslave='false'		# FIXME!
		;;
		monami*)
			uci set system.@weblogin[0].db_localcopy='true'
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '9' )"

			case "$NODENUMBER" in
				12)
					_wifi set adhoc 2ghz mcast_rate '1000'
					config_add_alias 'wan' '192.168.2.104/24' '192.168.2.1'
				;;
				10)
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
				9)
					uci del 'system.@weblogin[0].db_localcopy'
					config_add_alias 'lan' '192.168.2.103/24'
				;;
			esac
		;;
		limona*)
			# node6 = SSID-2 = 4,3 + (5)		# alles anders seit: 2015oct20
			# node5 = SSID-5 = nix			# wieder alles anders seit 2017mai8
			# node4 = SSID=3 = 3,6 (wifi-only)
			# node3 = SSID-4 = 4,6
			# node2 = SSID-1 = nix

			if [ $NODENUMBER -eq 2 ]; then
				uci set system.@monitoring[0].rrd='true'
				uci del 'system.@monitoring[0].maintenance'
			else
				uci set system.@monitoring[0].rrd='false'

				[ $NODENUMBER -eq 4 ] && {
					uci set system.@monitoring[0].maintenance_force='true'
				}

				uci set system.@system[0].disable_automount='true'	# safe memory
			fi

			uci set system.@monitoring[0].backping='4'
			uci set system.@system[0].zram_disabled='true'
			uci set system.@system[0].disable_qos='true'

			uci set system.@fwupdate[0].thrust_min='0'		# FIXME!
			uci set system.@fwupdate[0].allow_unchecked='true'	# FIXME!

			uci set system.@monitoring[0].lazy_wifi_framecounter='false'
			uci set system.@weblogin[0].respect_missing_db='true'

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Appartementhaus Limona'
				}
			}
		;;
		aschbach*)
			uci set system.@monitoring[0].rrd='true'

			touch '/tmp/FREE'		# mail: 7dez2016/F.Stolz

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Aschbacher Hof'
				}
			}
		;;
		cospudener*)
			_wifi set ap any ssid 'Zwischen.Himmel.und.Erde'
			touch /tmp/FREE
		;;
		braunsroda*)
			uci set system.@system[0].disable_qos='true'
			uci set system.@monitoring[0].sensor_netrange='lan'
			uci set system.@monitoring[0].sensor_allow_inet='true'
			uci set system.@fwupdate[0].thrust_min='0'
			pidof olsrd >/dev/null || _olsr hna4_inetoffer stop 'bootup'

			_wifi set anymode 2ghz chanbw '20'
			_wifi set ap anyfreq 'off'

			_wifi set ap any ssid "Naturstiftung $NODENUMBER"
			_wifi set adhoc   2ghz mcast_rate '1000'
			_wifi set anymode 2ghz txpower '23'
			_wifi set anymode 2ghz beacon_int '100'

			ROAMING='false'
		;;
		extrawatt*)
			uci set system.@weblogin[0].freelan='true'
		;;
		berlinle*)
			[ "$HARDWARE" = 'TP-LINK TL-WR1043ND' ] && _firmware set_usecase 'Standard,kalua'	# REMOVE!

			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '2' )"
			uci set olsrd.@meta[0].hnaslave='false'
			uci set system.@monitoring[0].roaming_nat='true'
			uci set system.@system[0].zram_disabled='true'

			uci set system.@fwupdate[0].thrust_min='0'		# FIXME!
			uci set system.@fwupdate[0].allow_unchecked='true'	# FIXME!

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Hotel Berlin'
				}
			}

			case "$NODENUMBER" in
				2)
					_wifi set anymode anyfreq 'off'		# we need RAM for DATABASE
				;;
				3)
					_wifi set ap anyfreq 'off'
				;;
			esac

			[ "$NODENUMBER" = '2' ] || uci set system.@system[0].disable_automount='true'

			_wifi set anymode 2ghz txpower '23'
			_wifi set adhoc 2ghz beacon_int '100'
		;;
		olympia*)
			[ "$NODENUMBER" = '7' ] && uci set system.@monitoring[0].pingcheck="$( _ipsystem getvar WIFIADR 2 )"
			uci set system.@monitoring[0].report_switch_change='true'
			_wifi set ap any ssid "Hotel Olympia $(( NODENUMBER - 1 ))"
		;;
		castelfalfi*)
			if date_is_after 'Sun Apr 10 23:55:00 CET 2015'; then
				rm '/tmp/FREE' 2>/dev/null
			else
				touch '/tmp/FREE'
			fi

			uci set system.@weblogin[0].defaultlang='en'
			uci set system.@weblogin[0].auth_type='roomnumber'
			uci set system.@weblogin[0].ticketstock='32'
			uci set system.@weblogin[0].force_lan_reachable='1'
			uci set system.@weblogin[0].always_reachable='true'

			uci set olsrd.@meta[0].ignore_restarts='true'
		;;
		fparkssee*|satama*|marinapark*)
			if [ -z "$LOWMEM" ]; then
				uci set olsrd.@meta[0].hnaslave='false'
			else
				uci set system.@weblogin[0].enabled='0'
			fi

			_wifi set adhoc any mcast_rate '1000'
			_wifi set adhoc 2ghz channel '11'
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:00:11'

			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'
		;;
		apphalle*)
			uci set olsrd.@meta[0].hnaslave='false'

			_wifi set ap    anyfreq ssid "$( _weblogin metadata_locationname | cut -d' ' -f1 ) $NODENUMBER"

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 2ghz mcast_rate '6000'

			_wifi set adhoc   5ghz ssid 'intern.5GHz'
			_wifi set anymode 5ghz channel '104'
			_wifi set anymode 5ghz txpower '21'
			_wifi set anymode 5ghz chanbw '5'

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Appartementhaus am Dom'
				}
			}

			_wifi set ap 5ghz 'off'
			_wifi set ap 2ghz txpower '22'
		;;
		xoai*)
			uci set system.@weblogin[0].enabled='1'
			uci set system.@weblogin[0].dynamic_portfw='00:1a:97:'	# cam/ICS2030
			uci set system.@system[0].timezone='ICT-7'

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'hotelxoai.com'
				}
			}
		;;
		tuberlin*)
			uci set system.@weblogin[0].enabled='0'
		;;
		amalienhof*)
			uci set system.@monitoring[0].rrd='true'
			uci set system.@weblogin[0].enabled='0'
			uci set olsrd.@meta[0].hnaslave='false'
			_wifi set ap 2ghz ssid 'Borbing'
		;;
		hentzel*)
			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@system[0].wifi_no_predistortion='false'
			uci del 'system.@monitoring[0].pingcheck'	# TODO: remove

			uci set olsrd.@olsrd[0].LinkQualityFishEye='0'

			# fullduplex mesh network with olsr2 and separated channels for RX/TX:
			case "$NODENUMBER" in
				2|3)
					# hybrid / dualband / inet
					#          mesh: channel 36
					_wifi set adhoc   2ghz 'off'
					_wifi set anymode 2ghz channel 1		# also mesh0.20mhz

					_wifi set adhoc   5ghz 'off'
					_wifi set anymode 5ghz channel 36		# also mesh1.20mhz
				;;
				4|6)
					# mesh/adhoc: channel 14 - TX
					ROAMING='false'
					_wifi set ap anyfreq 'off'
					_wifi longshot name 'i1' distance 50 channel 14 chanbw 10 mhz mcast 6000 nodes '4 6' pingcheck_lazy
				;;
				5|7)
					# mesh/80211s: channel 8 - RX
					ROAMING='false'
					_wifi set ap anyfreq 'off'
					_wifi interface_mesh2adhoc '0'		# experimental
					_wifi longshot name 'i2' distance 50 channel 8 chanbw 5 mhz mcast 6000 nodes '5 7' pingcheck_lazy
					_wifi interface_adhoc2mesh '0'		# experimental

					uci set olsrd.@Interface[2].LinkQualityMult='default 0.5'
				;;
			esac

			hostname_set()
			{
				uci set system.@system[0].hostname="$1"
				echo "$1" >/proc/sys/kernel/hostname
			}

			case "$NODENUMBER" in
				2) hostname_set 'E2-kammer-AP' ;;
				4) hostname_set 'E2-kammer-mesh1' ;;
				5) hostname_set 'E2-kammer-mesh2' ;;
				3) hostname_set 'E1-kammer-AP' ;;
				6) hostname_set 'E1-kammer-mesh1' ;;
				7) hostname_set 'E1-kammer-mesh2' ;;
			esac

			[ $NODENUMBER -eq 3 ] && {
				uci set network.wan.proto='static'
				uci set network.wan.ipaddr='192.168.2.114'
				uci set network.wan.netmask='255.255.255.0'
				uci set network.wan.gateway='192.168.2.1'

				uci set system.@monitoring[0].pingcheck='192.168.2.1'
			}

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Villa Hentzel'
				}

				_wifi set adhoc 2ghz ssid 'intern0.2GHz'
				_wifi set adhoc 5ghz ssid 'intern0.5GHz'
			}

			_wifi set anymode 2ghz txpower '23'
			_wifi set anymode 5ghz txpower '20'
		;;
		ffweimar*)
			uci set system.@vpn[0].active='true'

			uci set system.@monitoring[0].autoupload_config='true'
			uci set system.@weblogin[0].freelan='true'
			uci set system.@weblogin[0].auth_type='none'
			[ -z "$LOWMEM" ] && uci set system.@monitoring[0].statusprecache='1'

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'weimar.freifunk.net'
				}

				_wifi set adhoc 2ghz ssid 'ffintern.2GHz'
				_wifi set adhoc 5ghz ssid 'ffintern.5GHz'
			}
		;;
		ibfleesensee*)
			uci set system.@weblogin[0].enabled='1'
			uci set system.@weblogin[0].always_reachable='true'
			uci set olsrd.@meta[0].hnaslave='false'

			uci set system.@monitoring[0].cdp_send='true'
			URL='http://downloads.openwrt.org/barrier_breaker/14.07/ar71xx/generic/packages/oldpackages/cdp-tools_20070302-1_ar71xx.ipk'
			echo >>$SCHEDULER "_software package_is_installed cdp-tools || _software packages_install $URL"

			[ "$NODENUMBER" = '2' ] && {
				config_add_alias 'lan' '192.168.112.2/24' '192.168.112.1'
				uci set system.@monitoring[0].cisco_collect='true'
				uci set system.@monitoring[0].ignore_load='true'

				uci set network.wan.shaping='true'
				uci set network.wan.shaping_uplink='7500'
				uci set network.wan.shaping_downlink='7500'

				uci set dhcp.lan.leasetime='40m'
				ROAMING='lan'
			}

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Iberotel'
				}

				_wifi set adhoc 2ghz ssid 'ffintern.2GHz'
				_wifi set adhoc 5ghz ssid 'ffintern.5GHz'
			}
		;;
		palais*)
			uci set system.@monitoring[0].ignore_wifi_framecounter='true'
			uci set olsrd.@meta[0].allow_no_neigh='true'
			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'

			# weimarnetz
			_wifi set adhoc   2ghz mcast_rate '1000'
			_wifi set adhoc   2ghz bssid '02:ca:ff:ee:ba:be'
			_wifi set anymode 2ghz channel 5
		;;
		paltstadt*)
			case "$NODENUMBER" in
				3)
					uci set system.@monitoring[0].maintenance_ports='22 80'
					uci set system.@system[0].db_backup_force='true'
				;;
			esac

			olsr_disable_interface 'innercityVPN'
			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'
			uci set olsrd.@meta[0].throttle_traffic='true'
			uci set system.@vpn[0].active='true'

			uci set system.@weblogin[0].authserver='10.10.3.1'

			# weimarnetz
			_wifi set adhoc   2ghz mcast_rate '1000'
			_wifi set adhoc   2ghz bssid '02:ca:ff:ee:ba:be'
			_wifi set anymode 2ghz channel 5
		;;
		'wuensch'*)
			# only one router
			uci set olsrd.@meta[0].no_watching='true'
		;;
		'cvjm'*)
			# only one router
			uci set olsrd.@meta[0].no_watching='true'
			uci set olsrd.@meta[0].allow_no_neigh='true'

			force_dnsserver '208.67.222.123'	# opendns/no_adults

			# http://www.cvjm-leipzig.de/fileadmin/templates/images/cvjm_logo.gif
			uci set network.wan.shaping='true'
			uci set network.wan.shaping_uplink='8000'	# uebrig: 2mbit
			uci set network.wan.shaping_downlink='44000'	# uebrig: 6mbit

			uci set system.@system[0].avoid_autoreboot='true'
			uci set system.@weblogin[0].allow_cgi_roles='true'
			uci set system.@weblogin[0].freelan='true'
			uci set system.@weblogin[0].always_reachable='true'
			uci set system.@weblogin[0].list_walledgarden='192.168.5.254 winserver'

			uci set olsrd.@meta[0].ignore_restarts='true'

			_wifi set adhoc 2ghz ssid 'x'
			_wifi set ap    2ghz ssid 'CVJM Cafe'

			_wifi set adhoc   5ghz ssid 'X'
			_wifi set ap      5ghz ssid 'CVJM Cafe'
			_wifi set ap      5ghz 'on'
			_wifi set anymode 5ghz chanbw '20'
			_wifi set anymode 5ghz channel '36'
			_wifi set anymode 5ghz txpower '21'

			# zentrale:
			config_add_alias 'wan' '192.168.5.34/24' '192.168.5.1'

			# needs roaming or another DHCP-range for 5GHz
			uci set wireless.radio1.disabled='1'
			uci del 'network.@alias[0]'		# mastergate

			uci set system.@vpn[0].active='true'
			uci set system.@vpn[0].ipaddr='141.54.159.13'

			uci set system.@weblogin[0].hideandseek='1'
			uci set system.@weblogin[0].freelan='false'
		;;
		abtpark*)
			uci set system.@weblogin[0].ticketstock='32'

			[ $OPENWRT_REV -eq 44420 ] && {
				uci del wireless.radio1.htmode		# FIXME!
				uci del wireless.radio0.htmode
			}

			_wifi set adhoc 2ghz ssid 'x'
			_wifi set ap    2ghz ssid 'a-park.de'

			_wifi set adhoc   5ghz ssid 'X'
			_wifi set ap      5ghz ssid 'a_park.de'
			_wifi set ap      5ghz 'off'
			_wifi set anymode 5ghz chanbw '5'
			_wifi set anymode 5ghz channel '104'
			_wifi set anymode 5ghz txpower '21'
		;;
		liszt28*)
			_firmware get_usecase 'NAS' || {
				uci set system.@fwupdate[0].thrust_min='0'		# FIXME!
				uci set system.@fwupdate[0].allow_unchecked='true'	# FIXME!
				uci set system.@fwupdate[0].allow_inetoffer='true'
#				uci set system.@fwupdate[0].mode='beta'
			}

			[ "$HOSTNAME" = '240VoltPlugBuergel' ] && {
				[ "$( crontab -l | wc -l )" -eq 2 ] || {
					pidof crond >/dev/null && /etc/init.d/S51crond_fff+ restart
				}
				uci set system.@fwupdate[0].mode='testing'
			}

			uci set system.@weblogin[0].pdf_allow_archiv='true'
			uci set firewall.@adblock[0].enabled='true'
			uci set firewall.@adblock[0].windowsupdate='false'	# FIXME!
			uci set system.@system[0].disable_qos='true'		# FIXME!
			touch '/tmp/FREE'

			# http://www.bing.com/maps/?FORM=EXIPRV -> rightlick on location + copy&paste coords
			case "$NODENUMBER" in
				705) uci set system.@admin[0].latlon='50,990370;11,331675' ;;	# F36-NAS
				  4) uci set system.@admin[0].latlon='50,990426;11,331749' ;;	# F36-linksys
			esac

			_wifi set anymode anyfreq chanbw '20'

			uci set system.@vpn[0].ipaddr='141.54.159.13'
			uci set system.@vpn[0].active='true'

			[ -z "$LOWMEM" ] && uci set system.@system[0].zram_disabled='true'
			uci set system.@system[0].wifi_no_predistortion='false'

			uci set system.@monitoring[0].nightly_longrange='true'
			uci set system.@monitoring[0].send_mapapi='true'
			uci set system.@monitoring[0].ignore_lossyethernet='true'	# FIXME! (10.63.42.125)
			uci set system.@monitoring[0].txpower_auto='false'
			uci set system.@monitoring[0].rrd='true'
			uci set system.@monitoring[0].roaming_nat='true'
			uci set system.@monitoring[0].roaming_debug='true'

			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'
			pidof olsrd >/dev/null || _olsr hna4_inetoffer stop 'bootup'

			[ -h '/www/webcam.jpg' ] && {
				uci show system | grep -q 'webcam' || uci add system webcam >/dev/null
				uci set system.@webcam[-1].storage_path='bastian@10.63.2.34:bigbrother/'
			}

			[ -n "$LOWMEM" -a $OPENWRT_REV -gt 43735 ] && {
#				uci set wireless.radio0.disabled='1'
				uci delete network.wan6
				uci set network.wan.proto='static'

				/etc/init.d/odhcpd disable
				/usr/sbin/uhttpd disable
				/etc/init.d/sysntpd disable
				/etc/init.d/dropbear disable
				/etc/init.d/dnsmasq disable
				/etc/init.d/log disable
				/etc/init.d/telnet enable
			}

			[ -x '/usr/sbin/olsrd2' ] && {
				# disable IPv6
				# http://www.olsr.org/mediawiki/index.php/OLSR_network_deployments#IPv4_or_IPv6_only_mesh_network_with_olsrd2
				for i in '-0.0.0.0/0' '-::1/128' 'default_accept'; do {
					case "$( uci -q get olsrd2.@olsrv2[0].originator )" in
						*"$i"*)
						;;
						*)
							uci add_list olsrd2.@olsrv2[0].originator="$i"
						;;
					esac
				} done

				for i in '-0.0.0.0/0' '-::1/128' 'default_accept'; do {
					for j in 0 1 2 3; do {
						case "$( uci -q get "olsrd2.@interface[$j].bindto" )" in
							*"$i"*)
							;;
							*)
								uci add_list "olsrd2.@interface[$j].bindto=$i"
							;;
						esac
					} done
				} done

				# allow/tweak wan
				uci set olsrd2.@interface[2].ignore='0'
				uci set olsrd2.@interface[2].rx_bitrate='1G'
				uci set olsrd2.@interface[2].tx_bitrate='1G'
				# allow/tweak lan
				uci set olsrd2.@interface[3].ignore='0'
				uci set olsrd2.@interface[3].rx_bitrate='1G'
				uci set olsrd2.@interface[3].tx_bitrate='1G'
			}

			# so we can call 'http://www.internet'
			uci set dhcp.@dnsmasq[0].local='/internet/'
			uci set dhcp.@dnsmasq[0].domain='internet'
			uci set dhcp.lan.leasetime='48h'

			hostapd_activate_coredump

			uci set network.loopback.ip6assign='60'		# for OLSR2
			apply_olsr_speed '7'

			[ "$( uci -q get network.wan.proto )" = 'pppoe' ] && {
				uci set system.@system[0].avoid_autoreboot='true'
			}

			[ -n "$LOWMEM" ] && uci set system.@weblogin[0].enabled='0'
			[ -z "$LOWMEM" ] && uci set system.@monitoring[0].statusprecache='1'
			uci set system.@monitoring[0].ignore_switch_error='true'
			uci set system.@monitoring[0].autoupload_config='true'

			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@weblogin[0].freelan='true'
			uci set system.@weblogin[0].logtraffic='1'
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '276' )"

			uci set olsrd.@meta[0].fixedarp='true'
			uci set olsrd.@meta[0].throttle_traffic='true'
			uci set olsrd.@meta[0].nexthop_dns='false'	# FIXME!

			case "$NODENUMBER" in
				880)	# giancarlo/dach, from master: dc:9f:db:0d:c8:b5 $LANDEV
					uci set network.lan.proto='dhcp'
					bool_true 'system.@netfilter[0].lan_masquerading' || {
						uci add system netfilter >/dev/null
						uci set system.@netfilter[0].lan_masquerading='true'
					}

					_wifi set ap 5ghz 'off'
					ROAMING='false'

					uci set system.@vpn[0].active='false'
					uci set olsrd.@Interface[0].interface='Xlan'
				;;
				16)	# DSLR/Candy - Mobil
					uci show system | grep -q 'webcam' || uci add system webcam >/dev/null
					uci set system.@webcam[0].storage_path='mxwbook@10.63.147.236:Documents/DNT_SHOWS/DNT-JPASSION/candypics'
#					uci set system.@webcam[0].storage_path='bastian@10.63.16.29:candytest'
					uci set system.@webcam[0].dslr_upload='true'

					apply_olsr_speed '4'
					uci set olsrd.@Interface[2].LinkQualityMult='10.63.147.193 0.8'		# prefer 5GHz
					uci set network.wan.proto='dhcp'

					_wifi set ap anyfreq ssid 'candywelz.de'
					ROAMING='false'
				;;
				912)	# DSLR/Candy - Server
					# entry in /etc/ethers: (is mxw)
					# 68:5b:35:c6:dc:a0 10.63.147.236
					_wifi set ap any 'off'
					uci set network.wan.proto='dhcp'
					apply_olsr_speed '4'

					uci show system | grep -q 'webcam' || uci add system webcam >/dev/null
					uci set system.@webcam[0].dslr_upload='true'
				;;
				303)
					# f36drucker/alt
					uci set olsrd.@meta[0].watch_gateway='true'
				;;
				122)
					# reithaus
					uci set dhcp.lan.ignore='1'
					uci set network.wan.proto='static'
					uci set network.wan.ipaddr='10.10.100.40'
					uci set network.wan.netmask='255.255.255.224'	# /27
					uci set network.wan.gateway='10.10.100.33'

					uci set olsrd.@Interface[0].interface='Xlan'
					uci set olsrd.@Interface[1].interface='Xwan'

					uci set system.@vpn[0].active='false'
				;;
				337)
					# emelio-derzar
					uci set system.@monitoring[0].txpower_auto='false'
					ssid='playstation.freifunk.net'
				;;
				350)
					# f36drucker/neu

					# autostart radio
#					echo >>$SCHEDULER "BUTTON=wps; ACTION=released; grep -q nightly_reboot /tmp/REBOOT_REASON && . /etc/hotplug.d/button/events.sh"
					_wifi set ap 2ghz 'off'			# debug LEDE-issues
					ROAMING='false'
				;;
				837)
					_wifi set anymode 5ghz 'off'		# ath10k-crash
					ROAMING='false'
				;;
				28)
					# wrap-board/rene
					touch /tmp/FREE
				;;
				806)
					# DNT-Kellergott (belongs to 808|807 = Kantine/Kellergeist)
					touch /tmp/FREE
					ROAMING='false'
					_wifi set ap 2ghz ssid 'weimar.freifunk.net'
				;;
				670)
					# AlexLaterne
#					uci set olsrd.@Interface[1].LinkQualityMult='10.63.209.129 0.3'
					uci set dhcp.lan.ignore=1
				;;
				603)
					# ewerkNEU
					uci set system.@monitoring[0].pingcheck='8.8.8.8'
					uci set system.@monitoring[0].pingcheck_lazy='1'
				;;
				280)
					# danny
					uci set system.@monitoring[0].pingcheck='8.8.8.8'
				;;
				261)
					# webcam/buero-aussen -> ryzen
					uci set system.@system[0].avoid_autoreboot='true'
					uci set dhcp.lan.ignore=1
				;;
				799|8|245)
					# musikschule: instrumentenkammer, lehrerzimmer, richtfunk schwanseebad
					ROAMING='false'
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '245' )"
					touch /tmp/FREE
					_wifi set ap 2ghz ssid 'weimar.freifunk.net'
				;;
			esac

			_wifi set adhoc any  mcast_rate '6000'

			case "$HOSTNAME" in
				*'extrawatt'*)
					uci set system.@monitoring[0].button_smstext="extrawatt: Knopf gedrueckt: $NODENUMBER/$HOSTNAME"
					uci set system.@monitoring[0].button_phone='0177/2944426 0174/9466472 0176/24223419'
				;;
			esac

			case "$NODENUMBER" in
				4|5)
					# DNT: kantine/lichttechnik
					_wifi set adhoc any  mcast_rate '6000'
				;;
				860)
					# huehnerstall / kamera2
					uci set system.@webcam[0].flip_x='true'
					uci set system.@webcam[0].flip_y='true'
					uci set system.@webcam[0].resolution='800x600'
				;;
				861)
					# huehnerstall / huehnerklappe / chiggen-door + cam1
					uci set system.@webcam[0].resolution='800x600'
					uci set system.@webcam[0].disabled='true'	# till we fix too much load

					uci set system.@system[0].avoid_autoreboot='true'

					_wifi set ap anyfreq 'off'
					ROAMING='false'

					_chickendoor stop
					uci set system.@system[0].leds_ignore='true'
				;;
				729)
					# mario/xiaomi: prefer 5ghz
					uci set olsrd.@Interface[1].LinkQualityMult='10.63.22.67 0.8'
					uci set olsrd.@Interface[2].LinkQualityMult='10.63.22.67 0.8'
					uci set olsrd.@Interface[3].LinkQualityMult='10.63.22.67 0.8'
					_wifi set ap 2ghz 'off'
					ROAMING=false
				;;
				845)
					# staatsbank buero
					uci set system.@weblogin[0].enabled='0'
				;;
				275)
					# ayse, probs with double IP
					uci set system.@weblogin[0].enabled='0'
				;;
				814)
					# schlachtNanoDach (2.4ghz)
#					uci set system.@monitoring[0].speedcheck_fakeip='10.63.21.97'
					uci set olsrd.@Interface[1].LinkQualityMult='10.63.4.1 0.6'
					uci set system.@system[0].avoid_autoreboot='true'
				;;
				867)
					# elsternest -> LAN -> AirOS -> WAN-to-825
					uci set system.@monitoring[0].speedcheck_wired=true
					uci set dhcp.lan.ignore=1

					# avoid flapping gw from plagenwatz/bamag
					uci set olsrd.@Interface[0].LinkQualityMult='10.63.60.253 0.5'
					uci set olsrd.@Interface[0].Mode='mesh'

					config_add_alias 'lan' '192.168.3.1/24'		# ubnt AirOS = 192.168.3.20  / BAMAG
					config_add_alias 'lan' '192.168.1.8/24'		# ubnt AirOS = 192.168.1.222 / ewerk

					echo >"$TMPDIR/user.masq" "$IPT -t nat -I POSTROUTING -s 192.168.3.20/32 -j MASQUERADE"
				;;
				825)
					# BAMAG-to-wagenplatz
					config_add_alias 'wan' '192.168.3.2/24'		# ubnt AirOS = 192.168.3.30
					uci set system.@monitoring[0].pingcheck="$( _ipsystem getvar LANADR 814 )"	# schlachtNanoDach
					uci set system.@monitoring[0].pingcheck_lazy='1'

					uci set olsrd.@Interface[1].LinkQualityMult='10.63.102.225 0.5'
					uci set olsrd.@Interface[1].Mode='mesh'		# no 0.1 on WAN (so LinkQualityMult works)

					uci set network.lan.proto='dhcp'
					bool_true 'system.@netfilter[0].lan_masquerading' || {
						uci add system netfilter >/dev/null
						uci set system.@netfilter[0].lan_masquerading='true'
					}
				;;
				603)
					# ewerk/kesselsaalNEU
					# olsrd.@Interface[1].interface='wan'
					# prefer local inet, wan = schlacht => nun am Ryzen / 261 | ubnt/fm1204

					config_add_alias 'lan' '192.168.1.9/24'		# ubnt AirOS = 192.168.1.20
				;;
				773)
					_wifi set ap 2ghz ssid 'Konditorei Rose'
					ROAMING='false'

					uci set system.@weblogin[0].hideandseek='1'
					uci set system.@weblogin[0].auth_type='none'

					uci set system.@monitoring[0].toggle_wifi='true'
					uci set system.@monitoring[0].toggle_wifi_on='06:15'
					uci set system.@monitoring[0].toggle_wifi_off='18:30'

					uci set network.wan.proto='dhcp'
				;;
				612|598)
					uci set system.@monitoring[0].sensor_netrange='wan'
					uci set system.@monitoring[0].button_smstext="extrawatt: Knopf gedrueckt: $NODENUMBER/$HOSTNAME"
					uci set system.@monitoring[0].button_phone='0177/2944426 0174/9466472 0176/24223419'

					# extrawatt: 240V plug
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@weblogin[0].dynamic_portfw='*'

					_wifi set ap 2ghz ssid 'extrawatt'
					ROAMING='false'

					# 2G/wwan
					olsr_disable_interface 'innercityVPN'
					uci set system.@monitoring[0].backping='none'
					uci set system.@monitoring[0].report_wantraffic='true'
					uci set olsrd.@meta[0].ignore_restarts='true'
				;;
				732)
					uci set system.@monitoring[0].sensor_netrange='10.63.4.33/27'
					uci set system.@monitoring[0].button_smstext='extrawatt: Knopf wurde gedrueckt'
					uci set system.@monitoring[0].button_phone='0174/9466472 0176/24223419'
					uci del system.@monitoring[0].button_smstext
					uci del system.@monitoring[0].button_phone	# button error?

					# extrawatt: 1043erLTE
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@weblogin[0].dynamic_portfw='*'

					uci set system.@monitoring[0].maintenance_force='true'

					_wifi set adhoc anyfreq 'off'
					_wifi set ap    anyfreq ssid 'extrawatt'
					ROAMING='false'

					uci set system.@vpn[0].force='true'
					config_add_alias 'lan' '10.63.4.41/27'
					olsr_disable_interface 'innercityVPN'

					# https://wiki.openwrt.org/doc/recipes/ltedongle
					# uqmi -d /dev/cdc-wdm0 --get-signal-info
					# uqmi -d /dev/cdc-wdm0 --get-data-status
					# uqmi -d /dev/cdc-wdm0 --get-imei
					# uqmi -d /dev/cdc-wdm0 --set-network-modes gsm		// all, lte, umts, gsm, cdma, td-scdma
					# uqmi -d /dev/cdc-wdm0 --get-serving-system
					# uqmi -d /dev/cdc-wdm0 --network-scan
					uci set network.wwan='interface'
					uci set network.wwan.device='/dev/cdc-wdm0'
					uci set network.wwan.ifname='wwan0'
					uci set network.wwan.proto='dhcp'
					uci set network.wwan.pincode='8412'
					# uqmi -d /dev/cdc-wdm0 --verify-pin1 8412
					# uqmi -d /dev/cdc-wdm0 --get-pin-status
					# uqmi -d /dev/cdc-wdm0 --network-register
					uci set network.wwan.disabled='0'
					uci set network.wwan.apn='internet.t-mobile'
					uci set network.wwan.username='t-mobile'
					uci set network.wwan.password='tm'
					uci set network.wwan.modes='gsm'
					#root@box:~ uqmi -d /dev/cdc-wdm0 --get-serving-system
					#{
					#        "registration": "registered",
					#        "plmn_mcc": 262,
					#        "plmn_mnc": 1,
					#        "plmn_description": "Telekom.de",
					#        "roaming": false
					#}
				;;
			esac

			case "$NODENUMBER" in
				# tobiAlt|balkon|klaus|alrik|twohl|Ralf-exSchneiderei|roll10|roehr10|martin1200|zwickau|staatsbank-saal
				265|339|823|278|81|863|855|798|836|862|859)
					uci set system.@weblogin[0].hideandseek='1'
					uci set system.@weblogin[0].auth_type='none'

					case "$NODENUMBER" in
						862)
							# zwickau
							uci set system.@weblogin[0].enabled='1'
							uci del system.@weblogin[0].auth_type

							good_hash='b78550321eb60cce0f2347905963071c'
							URL='http://intercity-vpn.de/files/kurt_eisner.jpg'
						;;
						863)
							# kleinert
							uci set system.@vpn[0].active='false'

							uci set system.@weblogin[0].enabled='1'
							uci set system.@weblogin[0].fixed_password='12345'
							uci set system.@weblogin[0].auth_credentials='simple'
							uci del system.@weblogin[0].auth_type

							good_hash='2f89acf6664fb1659cc33cce19c4de28'
							URL='http://www.pension-kleinert-weimar.de/images/kleinert.png'

							_wifi set ap 2ghz ssid 'Pension'
							_wifi set ap 2ghz encryption 'psk2'
							_wifi set ap 2ghz key 'jagdwurst'
							_wifi set adhoc 2ghz beacon_int '100'

							ROAMING='false'
						;;
						859)
							# staatsbank-saal
							uci set system.@weblogin[0].enabled='0'
						;;
						*)
							good_hash='633f7c77760c44330559ebfe9f040901'
							URL='http://wireless.subsignal.org/images/f/f4/Ww_logo_543.png'
						;;
					esac

					[ "$( _file hash '/www/images/logo.gif' )" = "$good_hash" ] || {
						if [ -e '/www/images/logo-freifunk.gif' ]; then
							mv '/www/images/logo.gif' '/www/images/logo-original.gif'
							mv '/www/images/logo-freifunk.gif' '/www/images/logo.gif'
						else
							DEST='/www/images/logo-freifunk.gif'
							{
								echo "_curl it '$URL' >'$DEST'"
								echo '/etc/init.d/override_uci_vars boot'
								echo '_weblogin generate_prebuilt_splash_htmlfile persistent'
							} >>$SCHEDULER
						fi
					}
				;;
			esac

			case "$NODENUMBER" in
				722|746)
					# nachbar/wuschel
					touch '/tmp/FREE'
				;;
			esac

			case "$NODENUMBER" in
				731)
					# plug/scheune-dsl
					uci set system.@vpn[0].active='false'	# till issues are solved
				;;
				276)
					uci set system.@vpn[0].active='false'	# FIXME! (olsr-storms)
					uci set system.@vpn[0].hideandseek_disabled='true'
					uci set network.wan.shaping='true'
					uci set network.wan.shaping_uplink='940'
					uci set network.wan.shaping_downlink='13800'

					# ADSL Modem Allnet All0333CJ Rev.C / Amazon-SE SoC
					# web: admin/coolwhite -> advanced mode -> status
					config_add_alias 'wan' '172.16.1.253/24'

					# for internal portfw like coming from external
					config_add_alias 'wan' "$( _ipsystem getvar WANADR )/$( _ipsystem getvar WANPRE )"	# internal portfw
				;;
				279)
					# roehr30
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' "$NODENUMBER" )"
					nf_user 'mark_known' '70:1a:04:b1:5f:cf'
				;;
				277)
					uci set system.@monitoring[0].button_smstext='Fries36: Knopf gedrueckt: bitte anrufen 03643-827407'
					uci set system.@monitoring[0].button_phone='0176/24223419 0179/7465017'

					local myip

					# /etc/ethers:
					myip="$( _net ip4_plus_x "$LANADR" 1 )"
					_net dhcp_lease_fixed '70:10:6f:ca:74:70' "$myip"	# nas = .98

					myip="$( _net ip4_plus_x "$LANADR" 2 )"
					_net dhcp_lease_fixed '00:17:88:7b:84:62' "$myip"	# phillips hue = .99

					myip="$( _net ip4_plus_x "$LANADR" 3 )"
					_net dhcp_lease_fixed 'b4:2e:99:c4:5f:13' "$myip"	# ryzen = .100

					myip="$( _net ip4_plus_x "$LANADR" 6 )"
					_net dhcp_lease_fixed 'e8:6a:64:6c:0b:98' "$myip"	# job = .103

					myip="$( _net ip4_plus_x "$LANADR" 13 )"
					_net dhcp_lease_fixed 'b8:27:eb:d1:e2:90' "$myip"	# CCU3 = .110

klauschwein()
{
  uci set wireless.@wifi-iface[0].mode=sta
  uci set wireless.@wifi-iface[0].ssid='o2-WLAN36'
  uci set wireless.@wifi-iface[0].encryption='psk2'
  uci set wireless.@wifi-iface[0].key='Familie38Sajons'
  uci del wireless.@wifi-iface[0].mcast_rate
  uci del wireless.@wifi-iface[0].bssid
  uci del wireless.@wifi-iface[1]
  uci set network.wlanadhoc.proto=dhcp

  # iptables -t nat -I POSTROUTING -o phy0-sta0 -j MASQUERADE
  echo  >"$TMPDIR/user.masq" "$IPT -t nat -s 10.63.0.0/16 -I POSTROUTING -j MASQUERADE"

  _olsr hna4_inetoffer start 'bootup'
  # wifi
}

				;;
				603)
					# ewerk
#					_wifi set ap 2ghz ssid 'Mitarbeiter'
					uci set system.@monitoring[0].speedcheck_wired='true'
#					ROAMING='false'
				;;
			esac

			# for all nodes in network liszt28:
			local ip && ip="$( _ipsystem getvar 'LANADR' 278 )"	# from inet_offering router
			grep -sq ^"$ip " "$TMPDIR/own_dns_overrides.txt" || echo "$ip bwireless.mooo.com" >>"$TMPDIR/own_dns_overrides.txt"

			case "$NODENUMBER" in
				348)
					# TowerPower
					uci set dhcp.lan.ignore=1
				;;
				809)
					# starfighter/F36
					uci set system.@system[0].avoid_autoreboot='true'
				;;
			esac

			uci set olsrd.@meta[0].hnaslave='false'
			apply_olsr_speed 5

			_wifi set adhoc 2ghz ssid 'weimarnetz'
			_wifi set adhoc 2ghz channel '5'
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:ba:be'

			_wifi set adhoc   5ghz ssid 'weimarnetz-5Ghz'
			_wifi set adhoc   5ghz channel '40'
			_wifi set adhoc   5ghz bssid '02:ca:ff:ee:00:40'
#			_wifi set anymode 5ghz chanbw '5'

			uci del 'system.@monitoring[0].pingcheck'	# TODO: remove
			_wifi longshot name 'DNT-werkstatt'    distance 400 channel   1 chanbw  5 mhz mcast  6000 nodes '807 808'
			_wifi longshot name 'BAMAG-wagenplatz' distance 500 channel 100 chanbw 40 mhz mcast  6000 nodes '825 826'
			_wifi longshot name 'f36-schlacht5GHz' distance 360 channel 100 chanbw  5 mhz mcast  6000 nodes '719 670'
#			_wifi longshot name 'f36-schlacht2GHz' distance 360 channel  11 chanbw 40 mhz mcast 12000 nodes '766 814 905'
			_wifi longshot name 'kueche-loettisch' distance  50 channel  11 chanbw 10 mhz mcast 48000 nodes '2 222' pingcheck
			_wifi longshot name 'frenze-longshot'  distance  50 channel  11 chanbw 10 mhz mcast  6000 nodes '3 269' pingcheck

			# TODO:
			# - longshot: speed '$node->$node/$up/$down'
			# - longshot: speed '$up/$down" (if not multipoint)
			case "$NODENUMBER" in
				905)
					# witi2/longshot (nun im keller)
					uci set system.@system[0].avoid_autoreboot='true'
				;;
				814)
					# f36-schlacht2GHz
#					uci set network.wlan.shaping='true'
#					uci set network.wlan.shaping_uplink='2000'
#					uci set network.wlan.shaping_downlink='2000'
				;;
			esac

			case "$NODENUMBER" in
				826)
					# dumb AP connected ("fritzbox")
					uci set system.@weblogin[0].force_lan_reachable='true'
				;;
				825)
					# BAMAG richtung Wagenplatz (wifi-bridge schlachthof)
					uci set system.@monitoring[0].speedcheck_wired='true'
					uci set system.@monitoring[0].pingcheck='10.63.49.225'
				;;
				798)
					# roehr10
					_wifi set ap 2ghz ssid 'Weimarnetz'
				;;
				855)
					# rollplatz
					uci set system.@system[0].avoid_autoreboot='true'
					_wifi set ap any ssid 'weimarnetz (C64)'
					_wifi set adhoc 2ghz mcast_rate '1000'
					uci set system.@weblogin[0].hideandseek='1'

					uci set network.wan.shaping_uplink='64'
					uci set network.wan.shaping_uplink='2000'
				;;
				862)
					# zwickauer flitzer
					# uci delete 'system.@weblogin[0].authserver'
					_wifi set ap any ssid 'Kurt-Eisner-76'
					_wifi set adhoc any ssid 'o'
					uci set system.@weblogin[0].freelan='false'
					uci set system.@system[0].db_backup_force='true'

					uci set system.@monitoring[0].maintenance_ports='22 80'

					ROAMING='false'
				;;
				670|719)
					# buero/heim - richtfunk - backup
					uci delete 'wireless.radio0.ht_capab'
#					uci set wireless.radio0.htmode='HT40'

					_wifi set ap 5ghz 'off'
					ROAMING='false'

					uci set network.wlan.shaping='false'
#					uci set network.wlan.shaping_uplink='8000'
#					uci set network.wlan.shaping_downlink='8000'
				;;
				850)
					# demo1
					_wifi set ap 2ghz ssid 'MalchowIT (demo1)'
					uci set system.@monitoring[0].maintenance_ports='22 80'
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '850' )"
					_wifi set adhoc 2ghz ssid 'x'
					uci set system.@weblogin[0].freelan='false'

					ROAMING='false'
				;;
				851)
					# demo2
					_wifi set ap 2ghz ssid 'MalchowIT (demo2)'
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '850' )"
					_wifi set adhoc 2ghz ssid 'x'
					uci set system.@weblogin[0].freelan='false'

					ROAMING='false'
				;;
				704)
					# sommerbar
					ROAMING='lan wan'
				;;
				866)
					# fotobox
					ROAMING='false'
				;;
				99)
					# lan: fe80::b248:7aff:febb:5156/64
					_wifi set anymode 2ghz 'off'
					uci set network.lan.proto='dhcp'
				;;
				2)
					# EG-labor-AP / kueche
					# 10.63.2.33 / VoIP
					# scp intercity-vpn.de:/var/www/files/beethovens9th-long.wav /www/audio.wav
					uci set system.@system[0].avoid_autoreboot='true'
					_wifi set ap 2ghz 'off'

					echo  >"$TMPDIR/user.masq" "$IPT -I INPUT -i $LANDEV -p udp --dport 698 -m statistic --mode random --probability 0.4 -j DROP"
					echo >>"$TMPDIR/user.masq" "$IPT -I INPUT -i $WANDEV -p udp --dport 698 -m statistic --mode random --probability 0.4 -j DROP"
				;;
				920)
					# EG-labor-zweiter / kueche
					_wifi set adhoc 2ghz 'on'	# was 'off'
					uci set dhcp.lan.ignore='1'
					uci set olsrd.@Interface[0].Mode='mesh'		# only backup-connection

					echo  >"$TMPDIR/user.masq" "$IPT -I INPUT -i $LANDEV -p udp --dport 698 -m statistic --mode random --probability 0.4 -j DROP"
					echo >>"$TMPDIR/user.masq" "$IPT -I INPUT -i $WANDEV -p udp --dport 698 -m statistic --mode random --probability 0.4 -j DROP"
				;;
			esac

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" "$ssid" && {
					_wifi set ap any ssid "${ssid:-weimar.freifunk.net}"
				}

				# see: netparam_show_roaming() + xvlan
				uci set network.mastergate.pre='6.6'
				uci set network.mastergate.dst='10.63.22.98'

				_wifi set adhoc 2ghz ssid 'ffintern.2GHz'
				_wifi set adhoc 5ghz ssid 'ffintern.5GHz'
			}

			# FIXME!
			_wifi set anymode 2ghz txpower '23'
			_wifi set anymode 5ghz txpower '20'

			case "$NODENUMBER" in
				20)	# ute:druckerNEU
					_wifi set ap anyfreq 'off'
				;;
				810)
					# ute:inet
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@vpn[0].hideandseek_disabled='true'	# FIXME!
					nf_user 'mark_known' '00:21:6a:8b:38:76'	# laptop
					nf_user 'mark_known' 'bc:44:86:fd:c6:36'	# handy
				;;
				369)
					# ralf unten
					_wifi set adhoc any mcast_rate '1000'
					_wifi set ap 2ghz ssid 'radio'
					nf_user 'mark_known' '00:90:3e:fc:81:c2'	# phillips radio
					echo >>$SCHEDULER "_netfilter user_add 00:90:3e:fc:81:c2"
				;;
				292)
					# ralf oben
					_wifi set adhoc any mcast_rate '1000'
					_wifi set ap 2ghz ssid 'radioquelle'
				;;
				865|275|277)	# danny/ayse/f36stube
#					_wifi set anymode 2ghz txpower '20'
				;;
				3|269)
					# frenze/unten/oben (MESH)
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '813' )"
				;;
				813|602)	# frenze/unten/oben
					touch /tmp/FREE
					uci set system.@weblogin[0].enabled='0'
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '813' )"
					uci set system.@weblogin[0].hideandseek='0'

					_wifi set adhoc 2ghz 'off'

					_wifi set ap 2ghz channel '1'
					_wifi set ap 2ghz ssid 'Midgard_Ygdrasil'
					[ $NODENUMBER -eq 602 ] && _wifi set ap 2ghz ssid 'Topgard_Ygdrasil'
					_wifi set ap 2ghz encryption 'psk2'
					_wifi set ap 2ghz key 'mvemjsunp'
				;;
			esac

			case "$HOSTNAME" in
				*'-vhs'*)
					# e.g. 'E3-vhsRaum3.06-HYBRID' -> Raum3.06
					ROOM="$( echo "$HOSTNAME" | cut -d'-' -f2 | cut -d's' -f2 )"

					_wifi set ap      2ghz ssid "freifunk ($ROOM)"
#					_wifi set anymode 2ghz txpower '20'

					touch /tmp/FREE
					uci set system.@weblogin[0].hideandseek='1'
					uci set system.@weblogin[0].auth_type='none'
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '938' )"
					uci set system.@vpn[0].ipaddr='198.23.155.210'
				;;
				*'neufert-'*)
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '901' )"

					uci set dhcp.lan.ignore='0'
					uci set system.@weblogin[0].enabled='0'
					uci set system.@monitoring[0].station_stats='true'
					touch /tmp/FREE

#					_wifi set anymode 2ghz txpower '3'
#					_wifi set anymode 5ghz txpower '20'

					_wifi set ap 2ghz ssid 'digital.bauhaus'
					_wifi set ap 5ghz ssid 'digital.bauhaus'

					_wifi longshot name 'neufert' distance 360 channel 100 chanbw 5 mhz mcast 6000 nodes '901 245'

					case "$NODENUMBER" in
						901|245)
							_wifi set ap 5ghz 'off'
							ROAMING='false'
						;;
						901)
							uci set system.@monitoring[0].no_wiphy_restart='true'
							uci set network.wan.shaping_uplink='470'
							uci set network.wan.shaping_downlink='5600'
						;;
					esac
				;;
				'ewerk-'*)
					uci set dhcp.lan.ignore='1'
					uci set system.@weblogin[0].enabled='0'
					uci del system.@monitoring[0].station_stats
					touch /tmp/FREE

					# ewerk-vorfuehrraum-1-zentrale
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '759' )"

#					_wifi set ap anyfreq encryption 'psk2'
#					_wifi set ap anyfreq key '#digibau17'

#					_wifi set anymode 2ghz txpower '3'
#					_wifi set anymode 5ghz txpower '20'

					_wifi set ap 2ghz ssid 'weimar.freifunk.net'
					_wifi set ap 5ghz ssid 'weimar.freifunk.net'

#					_wifi set ap 2ghz ssid 'DigitalBauhausSummit'
#					_wifi set ap 5ghz ssid 'DigitalBauhausSummit'

					case "$NODENUMBER" in
						603|754)
							# 603 only has 2ghz and should have an adhoc-partner
						;;
						*)
#							_wifi set adhoc 2ghz 'off'
#							_wifi set ap    2ghz channel "$( _math random_integer 1 11 )"
						;;
					esac

					case "$NODENUMBER" in
						759)
							# ewerk-maschinensaal-mitte-hinten
							uci set network.wan.proto='dhcp'
							uci set system.@vpn[0].active='true'
							uci set system.@monitoring[0].maintenance_force='true'
						;;
						753)
							# ewerk-vorfuehrraum-1-zentrale
							uci set network.wan.ipaddr='10.1.3.166'		# 10.1.2.x = vodafone
							uci set network.wan.netmask='255.255.255.0'
#							uci set network.wan.gateway='10.1.3.1'
							uci del network.wan.gateway

							uci set system.@system[0].avoid_autoreboot='true'
						;;
						759)
							uci set dhcp.lan.ignore='0'
						;;
						920)
							# switch
							_wifi set anymode anyfreq 'off'
							config_add_alias 'lan' '192.168.178.45/24' '192.168.178.1'
							uci set system.@system[0].avoid_autoreboot='true'
						;;
						921)
							# switch
							_wifi set anymode anyfreq 'off'
							config_add_alias 'lan' '192.168.178.46/24' '192.168.178.1'
							uci set system.@system[0].avoid_autoreboot='true'
						;;
					esac
				;;
			esac

			case "$NODENUMBER" in
				277|729)
					# f36-stube + TV/mario
				;;
				*)
					uci set dhcp.lan.ignore='true'
				;;
			esac

			test $( _system ram_size ) -gt 32768 && \
				uci set olsrd.@meta[0].watch_gateway=true

			apply_olsr_watchdog

			case "$HARDWARE" in
				'TP-LINK Archer C6U')
					# 5ghz/mt7615e crashes sometimes on bootup + strange behaviour + adhoc br0ken
					# https://github.com/openwrt/mt76/issues/690#issuecomment-1243923629
					#
					# make sure we have sane defaults:
					_wifi set any 5ghz distance ''
					_wifi set any 5ghz beacon_int ''
					_wifi set any 5ghz txpower ''
					_wifi set any 5ghz frag ''
					_wifi set any 5ghz chanbw ''
					_wifi set any 5ghz htmode ''
					_wifi set any 5ghz disassoc_low_ack ''
					_wifi set any 5ghz max_inactivity ''
					_wifi set any 5ghz mcast_rate ''

					_wifi set ap    5ghz on
					_wifi set adhoc 5ghz off
                                        _wifi set ap    2ghz on
                                        _wifi set adhoc 2ghz on
				;;
			esac
		;;
		'ilm1'*)
			[ $NODENUMBER -eq 800 ] && uci set system.@system[0].avoid_autoreboot='true'

			uci set system.@vpn[0].active='true'
			uci set system.@vpn[0].hideandseek_disabled='true'
			uci set system.@monitoring[0].statusprecache='true'
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '800' )"

#			_wifi set adhoc 2ghz 'off'
			uci set olsrd.@olsrd[0].LinkQualityAlgorithm='etx_ffeth'
			apply_olsr_speed 7

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Ilmstrasse1'
				}

				_wifi set adhoc 2ghz ssid 'intern.2GHz'
				_wifi set adhoc 5ghz ssid 'intern.5GHz'
			}

			_wifi set ap 2ghz txpower '22'
		;;
		ejbw*)
			# CPE710-A = AP  = 192.168.0.254 = SSID = TNK / WPA-PSK = 8ewl...x2
			# CPE710-B = STA = 192.168.0.253

			case "$NODENUMBER" in
				50|60) ;;
				*) uci set olsrd.@meta[0].no_auto_hna4='true' ;;
			esac

			case "$NODENUMBER" in
				43)
					force_dnsserver '10.10.100.1'		# FIXME!
				;;
				*)
					force_dnsserver '208.67.222.123'	# opendns/no_adults
				;;
			esac

			case "$NODENUMBER" in
				50)
					# 172.17.0.2/22
					uci set network.wan.metric=100

					config_add_alias 'lan' '192.168.178.222/24' '192.168.178.1'

					bool_true 'system.@netfilter[0].lan_masquerading' || {
						uci add system netfilter >/dev/null
						uci set system.@netfilter[-1].lan_masquerading='true'
					}
				;;
			esac

			uci set system.@weblogin[0].enabled='false'		# since 2015nov19

			uci set system.@monitoring[0].report_lan_dhcp='true'
			uci set system.@monitoring[0].ignore_lossyethernet='true'	# powerline e.g. 10.10.31.61
			uci set olsrd.@meta[0].hnaslave='false'
			uci set system.@monitoring[0].backping='16'	# lueftungskeller

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:ff:ee'
			_wifi set ap anyfreq ssid 'EJB Weimar'		# PMR: poor mens roaming
			uci set dhcp.wlan.leasetime='5m'		# FIXME! till roaming is fixed

			case "$NODENUMBER" in
				60|26)
					# TODO: each AP in RH another SSID?
					# TODO: wireless.@wifi-iface[$index].disassoc_low_ack=0 ?
				;;
			esac

			case "$NODENUMBER" in
				100|101)
					uci set system.@system[0].avoid_autoreboot='true'

					# real: 367m - FIXME! was 20 mhz with r44150/J2 + r41522/reithaus at -70 dBm
					_wifi longshot name 'j2-reithaus' distance 380 channel 40 chanbw 10 mhz mcast 6000 nodes '100 101' pingcheck
					_wifi set anymode 5ghz txpower '23'	# CPE510 + revert-c2e0c41842895ba47819fa98b785c76a2524628b

					uci set system.@system[0].disable_qos='true'
					uci set network.wlan.shaping='false'
#					uci set network.wlan.shaping_uplink='13000'	# we have ~18mbit max @5mhz chanbw (minstrel)
#					uci set network.wlan.shaping_downlink='13000'	# 2017apr28 @20mhz = MCS5 = 30.6mbit
#											# 2020oct21 @10mhz = MCS0 = 4mbit
				;;
			esac

			case "$NODENUMBER" in
				101|41|42|43|45|46|47|26|59|60)
					# reithaus
					uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'WIFIADR' '100' )"
				;;
				*)
					uci set system.@weblogin[0].authserver='172.17.0.2'
				;;
			esac

			case "$NODENUMBER" in
				31|48)
					uci set olsrd.@Interface[0].Mode='mesh'		# why?
				;;
			esac

			case "$NODENUMBER" in
				26|60|43|30|31|35|39|13)
					uci set dhcp.lan.ignore='0'
				;;
				*)
					uci set dhcp.lan.ignore='1'
				;;
			esac

			case "$NODENUMBER" in
				39|35|31|30)
					# riegel / pbx-stuff
					uci set system.@system[0].avoid_autoreboot='true'
				;;
				100)
					# j4dach
					config_add_alias 'lan' '192.168.112.2/24' '192.168.112.1'

					bool_true 'system.@netfilter[0].lan_masquerading' || {
						uci add system netfilter >/dev/null
						uci set system.@netfilter[-1].lan_masquerading='true'
					}

					uci_already_added 'olsrd' 'Hna4' 'netaddr' '172.17.0.0' || {
						uci add olsrd Hna4 >/dev/null
						uci set olsrd.@Hna4[-1].netaddr=172.17.0.0
						uci set olsrd.@Hna4[-1].netmask=255.255.252.0
					}

					uci set system.@monitoring[0].pingcheck='10.10.101.1'

					_olsr hna4_inetoffer start 'bootup'

					# FIXME: workaround:
					echo  >"$TMPDIR/user.masq" "$IPT -t nat -s 10.10.0.0/16   -I POSTROUTING -j MASQUERADE"
					# answerpackets for MSR should go back correctly
					echo >>"$TMPDIR/user.masq" "$IPT -t nat -d 192.168.0.0/24 -I POSTROUTING -j MASQUERADE" 
				;;
				101)
					# Heizung/Lueftung: 192.168.0.245|246|247 - haustechnikmsr|Ods8g4d2

					# reithaus/dach
#					uci add network alias
#					uci set network.@alias[-1].interface="lan"
#					uci set network.@alias[-1].proto=static
#					uci set network.@alias[-1].ipaddr=192.168.10.2
#					uci set network.@alias[-1].netmask=255.255.255.0
#					uci rename network.@alias[-1]=myLAN

#					uci add network route
#					uci set network.@route[-1].interface="myLAN"
#					uci set network.@route[-1].target=192.168.0.0
#					uci set network.@route[-1].netmask=255.255.255.0
#					uci set network.@route[-1].gateway=192.168.10.1

					uci_already_added 'olsrd' 'Hna4' 'netaddr' '192.168.10.0' || {
						uci add olsrd Hna4 >/dev/null
						uci set olsrd.@Hna4[-1].netaddr=192.168.10.0	# TODO: always set?
						uci set olsrd.@Hna4[-1].netmask=255.255.255.0
					}

#					uci add olsrd Hna4
#					uci set olsrd.@Hna4[-1].netaddr=192.168.0.0
#					uci set olsrd.@Hna4[-1].netmask=255.255.255.0

					uci set system.@monitoring[0].pingcheck='10.10.100.1'
					uci set system.@monitoring[0].maintenance_force='true'
				;;
				45)
					# dachboden-rechts / MSR-technik
					echo >"$TMPDIR/user.masq" "$IPT -t nat -I POSTROUTING -d 192.168.0.0/24 -j MASQUERADE"
					config_add_alias 'lan' '192.168.0.1/24' '192.168.10.1'
					uci_already_added 'olsrd' 'Hna4' 'netaddr' '192.168.0.0' || {
						uci add olsrd Hna4 >/dev/null
						uci set olsrd.@Hna4[-1].netaddr=192.168.0.0
						uci set olsrd.@Hna4[-1].netmask=255.255.255.0
					}

					network.wan.proto='dhcp'
				;;
			esac
		;;
		leonardo*)
			if date_is_after 'Mon Mar 13 23:55:00 CET 2017'; then
				rm '/tmp/FREE' 2>/dev/null
			else
				touch '/tmp/FREE'
			fi

			# TODO: send via monitoring:
			# poe-kabel: [1] [2] [3] [4]  | 1=Konferenzraum 2=E1-flur 3=E3-flur 4=EG-flur

			uci set system.@weblogin[0].namespace='leonardo'	# username of ticket
			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@weblogin[0].db_forcefuzzy='true'
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '3' )"
			uci set system.@weblogin[0].always_reachable='true'	# FIXME!
			uci set olsrd.@meta[0].hnaslave='false'

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:00:11'
			_wifi set adhoc 2ghz ssid '_'

			# inet-offer/buero
			[ "$NODENUMBER" = '6' ] && _wifi set anymode anyfreq off

			# all wired
			case "$NODENUMBER" in
				2|6|7|9|26|27|35|36)
					uci set system.@system[0].avoid_autoreboot='true'
				;;
			esac

			case "$NODENUMBER" in
				32|3|9)
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
			esac

			#5: eth0.2@eth0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc prio state UP group default 
			#    link/ether d8:5d:4c:f6:2a:02 brd ff:ff:ff:ff:ff:ff
			#    inet 217.68.167.109/24 brd 217.68.167.255 scope global eth0.2
			#       valid_lft forever preferred_lft forever
			#    inet 192.168.6.1/24 brd 192.168.6.255 scope global eth0.2
			#       valid_lft forever preferred_lft forever
			#    inet6 2a00:c1a0:8000:0:5426:3612:3fab:8348/128 scope global noprefixroute dynamic 
			#       valid_lft 444423sec preferred_lft 444423sec
			#    inet6 fe80::da5d:4cff:fef6:2a02/64 scope link 
			#       valid_lft forever preferred_lft forever

			# inet-radio:
			# 192.168.6.25 dev eth0.2 lladdr 00:1c:d2:f0:17:5c REACHABLE

			# 0024d1aa394c = thompson
			# kabel-modem: thompson: fe80::210:95ff:feff:fffe = 00:10:95:ff:ff:fe
			# wget -qO - "http://[fe80::210:95ff:feff:fffe%eth0.2]"

			# WAN-inet-offer WLAN-Zentrale = D8:5D:4C:F6:2A:02 = 192.168.6.1/24
			# WPA2 = 28297982537237995581
			# FRITZ!Box 4020 UR
			# C8:0E:14:B5:05:3B
			# 192.168.6.243	E8:39:DF:96:53:64
			# fritzbox: bald3683

			# dns-servers via DHCP: 217.68.161.141
			#			217.68.161.171

			# im 217er Netz gibt es jede Menge IoT-Kram: Web-Modul TROVIS 5590 = 217.68.167.3 = 00:e9:1f:a1:08:d7

			# root@EG-flurDSL-MESH:~ ip neigh | grep $WANDEV
			# fe80::210:95ff:feff:fffe dev eth0.2 lladdr 00:10:95:ff:ff:fe STALE
			# fe80::21c:d2ff:fef0:175c dev eth0.2 lladdr 00:1c:d2:f0:17:5c STALE
			# fe80::8a43:e1ff:fe38:75d9 dev eth0.2 lladdr 88:43:e1:38:75:d9 router REACHABLE
			# fe80::bd8c:b077:f207:d7e6 dev eth0.2  FAILED
			# fe80::555c:7157:ae9c:9091 dev eth0.2 lladdr 90:1b:0e:9f:6a:81 STALE
			# 192.168.6.27 dev eth0.2 lladdr d0:50:99:17:c7:65 STALE
			# 192.168.6.243 dev eth0.2 lladdr e8:39:df:96:53:64 STALE
			# 192.168.6.25 dev eth0.2 lladdr 00:1c:d2:f0:17:5c REACHABLE
			# 192.168.6.254 dev eth0.2 lladdr 90:1b:0e:9f:6a:81 REACHABLE
			# 217.68.167.1 dev eth0.2 lladdr 88:43:e1:38:75:d9 DELAY
			# 192.168.6.249 dev eth0.2 lladdr c8:0e:14:b5:05:39 DELAY
			# 192.168.6.19 dev eth0.2 lladdr 00:19:99:f3:4b:ec REACHABLE

			case "$NODENUMBER" in
				13)
					# geheim: BEACH-router
				;;
				6)
#					force_dnsserver '217.68.161.141'

					# master
					uci set system.@monitoring[0].backping='6'
					uci set system.@weblogin[0].allow_wan='true'
					uci set system.@weblogin[0].enabled='0'		# otherwise DNS from wan-side is blocked
					uci set network.wan.public_ip='false'		# since 2014nov10 / primacom
					uci set dhcp.lan.ignore='1'

					# vertragsnr. 6348570 - 0341/42372000
				;;
				3)
					# konferenz / seems to be NAT'ed sometimes
					uci set system.@weblogin[0].freelan='true'

					_wifi set ap any ssid 'Leonardo Konferenz'
				;;
			esac

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					[ "$NODENUMBER" = '3' ] || {
						_wifi set ap any ssid 'Hotel Leonardo'
					}
				}
			}

			_wifi set ap 2ghz txpower '20'		# FIXME!
		;;
		malchowit*)
			uci set system.@monitoring[0].maintenance_ports='22 80'

			uci set system.@system[0].db_backup_force='true'
			uci set system.@weblogin[0].ticketstock='32'

#			apply_olsr_roaming && {
				_wifi set ap any ssid 'Zimmer Mellentin'
#			}
		;;
		malchowpferde*)
			uci set olsrd.@meta[0].allow_no_neigh='true'
			uci set system.@monitoring[0].maintenance_ports='22 80'
			uci set system.@system[0].db_backup_force='true'

			config_add_alias 'wan' '192.168.2.253/24'	# portfw
		;;
		malchowpension*)
			uci set olsrd.@meta[0].allow_no_neigh='true'
			uci set system.@weblogin[0].auth_type='roomnumber'
			uci set system.@monitoring[0].maintenance_ports='22 80'
			uci set system.@system[0].db_backup_force='true'

			_wifi set ap 2ghz ssid 'Fackelgarten'
			_wifi set ap 5ghz ssid 'Fackelgarten Konferenz'
		;;
		tkolleg*)
			uci set system.@system[0].db_backup_force='true'
			uci set olsrd.@meta[0].hnaslave='false'
			uci set system.@timeserver[0].server='10.10.0.1'
			uci set system.@weblogin[0].freelan='true'

			[ "$NODENUMBER" = '2' ] && {
				uci set network.lan.netmask='255.255.0.0'
				uci set network.lan.gateway='10.10.0.1'

				uci del      dhcp.@dnsmasq[0].server
				uci add_list dhcp.@dnsmasq[0].server='10.10.0.1'
				# olsrd-hna: 0/0 + 10.10.0.1/32 + 10.10.0.2/32 + 10.10.0.10/32
			}
		;;
		giancarlo*)
			case "$NODENUMBER" in
				20)	# nudeltheke
					uci set system.@monitoring[0].pingcheck='10.10.5.129'
					uci set system.@monitoring[0].pingcheck_lazy='1'
				;;
				5)
					uci set system.@system[0].avoid_autoreboot='true'
				;;
			esac

			uci set system.@monitoring[0].ignore_lossyethernet='true'	# FIXME!
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '5' )"
			uci set system.@weblogin[0].respect_missing_db='true'

			apply_olsr_roaming && {
				_wifi set ap any ssid 'Giancarlo'
			}

			_wifi set adhoc 2ghz 'off'
#			_wifi set adhoc 2ghz ssid 'intern.2GHz'
#			_wifi set adhoc 2ghz mcast_rate '6000'

			uci set system.@monitoring[0].wifi_netparam_name='wlanadhocRADIO1'

			_wifi set anymode 5ghz chanbw '5'
			_wifi set anymode 5ghz channel '104'
			_wifi set anymode 5ghz txpower '21'
			_wifi set adhoc   5ghz ssid 'intern.5GHz'
			_wifi set ap      5ghz 'on'
		;;
		marinabh*)
			uci set system.@monitoring[0].rrd='true'
			uci set system.@monitoring[0].backping='9'	# steg2laterne-AP
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '2' )"
			uci set olsrd.@meta[0].hnaslave='false'

			[ "$NODENUMBER" = "2" ] && {
				_wifi set anymode anyfreq 'off'
			}

			apply_olsr_roaming && {
				_wifi set ap any ssid 'Marina Boltenhagen'
			}

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'
			_wifi set adhoc 2ghz mcast_rate '1000'
		;;
		adagio*)
			uci set system.@weblogin[0].always_reachable='true'
			uci set olsrd.@meta[0].hnaslave='false'

			_wifi set adhoc 2ghz channel '11'
			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:00:11'

			_wifi set adhoc 2ghz mcast_rate '6000'		# prefer 5ghz TODO: penalty for 2ghz OLSR?
			_wifi set adhoc 5ghz mcast_rate '6000'

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Hotel Adagio'
				}
			}
		;;
		lisztwe*)
			uci set system.@system[0].disable_qos='true'
			uci set system.@fwupdate[0].thrust_min='0'
			uci set system.@fwupdate[0].allow_unchecked='true'	# FIXME!
			uci set system.@monitoring[0].ignore_phy_probs='true'	# FIXME! (was for r37665)

			_wifi set adhoc any mcast_rate '6000'

			case "$NODENUMBER" in
				15)
					uci set system.@weblogin[0].freelan='true'
					nf_user 'mark_known' '00:1a:e8:8a:7d:49'
					echo >>$SCHEDULER '_netfilter user_add 00:1a:e8:8a:7d:49 10.63.15.34'
					nf_user 'mark_known' '00:19:99:d0:da:e8'
					echo >>$SCHEDULER '_netfilter user_add 00:19:99:d0:da:e8 10.63.15.52'
				;;
				4)
					_wifi set anymode anyfreq 'off'		# we need RAM
				;;
			esac

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Hotel Liszt'
				}
			}
		;;
		rehungen*)
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '8' )"
			uci set system.@weblogin[0].logtraffic='1'
			uci set system.@weblogin[0].respect_missing_db='true'
			uci set system.@weblogin[0].freelan='true'
			uci set system.@weblogin[0].logtraffic='1'

			uci set system.@monitoring[0].backping='8'	# kiga
			uci set system.@monitoring[0].ignore_switch_error='true'

			uci set olsrd.@meta[0].fixedarp='true'

			# NetIO230b/Kiga  - 24:a4:2c:10:17:fa = 10.10.8.44 via LAN
			# NetIO230b/Puppe - 24:a4:2c:10:02:a6
			uci set system.@weblogin[0].dynamic_portfw='24:a4:2c:'

			_wifi set adhoc 2ghz mcast_rate '6000'

			case "$NODENUMBER" in
				7)
					# haupt-70b/konsum
					uci set system.@monitoring[0].maintenance_force='true'
				;;
				8)
					# till will we fix 230/232
					uci set system.@monitoring[0].ignore_lossyethernet='true'
					uci set system.@monitoring[0].maintenance_force='true'
				;;
				89|131|44|72)
					# FIXME!
					# klausgasse66a-dach|klausgasse101b-dach|nussberg2b-dachstube
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
				63)
					# hauptstrasse 114 unten
					uci set system.@monitoring[0].pingcheck='10.10.254.33'
				;;
				113)
					# hostname = kirchgasse34kinderzimmer-unten
					# nexthop = node5 = hauptstrasse40b-NEU2
					# lanmac seen: 70:1a:04:b1:e6:40
					uci set system.@weblogin[0].blocked='true'
				;;
				249)
					# weizenfeld -> rehungen
					uci set system.@monitoring[0].ignore_lossyethernet='true'
					uci set olsrd.@meta[0].reboot_weak_ethernet='0'
				;;
				250)
					# weizenfeld -> sollstedt
					uci set system.@monitoring[0].ignore_lossyethernet='false'
					uci set olsrd.@meta[0].reboot_weak_ethernet='1'
					uci set system.@monitoring[0].pingcheck='10.10.249.1'
				;;
				254)
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@weblogin[0].blocked='true'
					uci set system.@monitoring[0].pingcheck='10.10.8.33'
					_wifi set anymode anyfreq 'off'
				;;
				253)
					uci set system.@monitoring[0].pingcheck='8.8.8.8'
				;;
			esac

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:ff:ee'
			_wifi set ap    2ghz  ssid "Rehungen $NODENUMBER"

			# TODO: sort nodenumber-order <-> hostname
			# distance: roundup to 450m
			_wifi longshot name 'heidenroder-thalmann'  distance  100 channel 157 chanbw 20 mhz mcast 18000 nodes '253 252'

			_wifi longshot name 'feld-soll'             distance 3100 channel  48 chanbw 20 mhz mcast 18000 nodes '251 250'
			_wifi longshot name 'feld-kiga'             distance  950 channel 165 chanbw 20 mhz mcast 18000 nodes '249 248 237 193'

			_wifi longshot name 'kiga-kirchg40b'        distance  200 channel  36 chanbw 20 mhz mcast  6000 nodes '236'		# nolink
			# FIXME! it's the same like puppe-breitestr14/218?
			_wifi longshot name 'kiga-hauptstr25'       distance  500 channel  36 chanbw  5 mhz mcast  6000 nodes '234'		# nolink
			_wifi longshot name 'kiga-kirchg38'         distance  400 channel  36 chanbw 20 mhz mcast  6000 nodes '232'		# nolink
			_wifi longshot name 'kiga-klausg70'         distance  200 channel 161 chanbw 20 mhz mcast 18000 nodes '230 229'
			_wifi longshot name 'kiga-kirchg33'         distance  150 channel 153 chanbw 20 mhz mcast 18000 nodes '228 227'
#			_wifi longshot name 'kiga-klausg67b3'       distance  350 channel  40 chanbw 20 mhz mcast  6000 nodes '212'		# nolink
			_wifi longshot name 'kiga-dietzelsg39b'     distance  200 channel  36 chanbw 20 mhz mcast  6000 nodes '224'		# nolink
			_wifi longshot name 'kiga-nussberg116/73a'  distance  350 channel  40 chanbw 20 mhz mcast 18000 nodes '222 221 212'	# 223 missing = kiga - now 212
			# 214=kiga 213=puppe 188=nussberg79a 190=haupt8 +dazu: 189/haupt14neu + 247/breite14
			_wifi longshot name 'kiga-puppe'            distance  400 channel  60 chanbw 20 mhz mcast 18000 nodes '214 213 188 190 189 247'

			# 189=haupt14neu
#			_wifi longshot name 'puppe-hauptstr14-br1'  distance  250 channel 153 chanbw 20 mhz mcast 18000 nodes '220 219 247 189'
			_wifi longshot name 'puppe-breitestr14'     distance  300 channel  36 chanbw 20 mhz mcast  6000 nodes '218'		# nolink
			_wifi longshot name 'puppe-schuetzeng'      distance  250 channel 112 chanbw  5 mhz mcast  6000 nodes '216 215 210'

			_wifi longshot name 'kirchg33-hauptstr52'   distance  200 channel 149 chanbw 20 mhz mcast 18000 nodes '226 225'
#			_wifi longshot name 'klaus101b-klausg67b3'  distance  200 channel  36 chanbw 20 mhz mcast  6000 nodes '201 203'		# 201 missing
			_wifi longshot name 'klaus101b-klausg67b3'  distance 1200 channel  48 chanbw 20 mhz mcast  6000 nodes '201 203'		# 201 missing -> weizenfeld/249?

			_wifi longshot_name >/dev/null && {
				uci set system.@system[0].avoid_autoreboot='true'
				uci set olsrd.@meta[0].reboot_weak_ethernet='true'
			}

			uci set system.@monitoring[0].nightly_longrange='true'
		;;
		boltenhagendh*)
			uci set system.@monitoring[0].maxcost='6500'
			uci set system.@monitoring[0].ignore_lossyethernet='true'	# too much restarting OLSR/fully wired switched
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '111' )"		# Festscheune3
			uci set system.@weblogin[0].always_reachable='true'

			uci set olsrd.@meta[0].hnaslave='false'
			uci set olsrd.@meta[0].throttle_traffic='1'

			apply_olsr_speed '20'

			case "$NODENUMBER" in
				159|139)
					# LobbyBar IB/WZR + surfstation DH
					uci set dhcp.lan.ignore='0'
				;;
				*)
					uci set dhcp.lan.ignore='1'
				;;
			esac

			case "$NODENUMBER" in
				111|2)
					# festscheune3/authserver + master
					uci set system.@monitoring[0].report_traffic_nightly='true'
					uci set system.@system[0].avoid_autoreboot='true'
					uci set system.@monitoring[0].ignore_load='true'

					_wifi set anymode anyfreq 'off'
				;;
			esac

			case "$NODENUMBER" in
				2)
					uci set network.wan.shaping='true'
					uci set network.wan.shaping_uplink='9500'
					uci set network.wan.shaping_downlink='9500'
				;;
			esac

			_wifi set adhoc 2ghz bssid '02:be:ef:ca:ff:ee'
			_wifi set adhoc 2ghz channel '11'

			case "$NODENUMBER" in
				138|139|200|168|170)
					# serverraum/surfstation DH
					_wifi set adhoc 2ghz mcast_rate '1000'
				;;
#				33|34|35|36|37|38|39|40|41|42|43|44)
#					# haus 1
#					uci set olsrd.@meta[0].hnaslave='true'
#					uci set olsrd.@meta[0].hnaslave_dirty='true'
#				;;
			esac

			if [ -e '/www/hnaslave_dirty' ]; then
				uci set olsrd.@meta[0].hnaslave='true'
				uci set olsrd.@meta[0].hnaslave_dirty='true'
			else
				uci set olsrd.@meta[0].hnaslave='true'
				uci set olsrd.@meta[0].hnaslave_dirty='true'

				# 2 = nexthop and 'AP-only'
				uci set olsrd.@meta[0].hnaslave_condition='2 ap'
			fi

			_wifi set adhoc 2ghz ssid 'intern.2GHz'
			_wifi set adhoc 5ghz ssid 'intern.5GHz'

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'Weisse Wiek'
				}
			}

			case "$NODENUMBER" in
				# FS: Schliemann | Konferenz | Lilienthal | Serverraum | Barlach
				# 7 war Konferenz -> putt (Barlach nun Konferenz), Barlach nun 8
				# 203-206 = 4 x zusatz
				157|81|7|8|174|175|176|203|204|205|206)
					uci set system.@weblogin[0].enabled='0'
					uci set olsrd.@meta[0].hnaslave='false'

					local UNIX_NOW="$( _system date unixtime )"
					local UNIX_START="$( _system date 2unixtime 'Sun Aug 23 23:55:00 CET 2015' )"	# 23.8
					local UNIX_END="$(   _system date 2unixtime 'Wed Sep  7  3:55:00 CET 2015' )"	# 6.9
					[ $UNIX_NOW -gt $UNIX_START -a $UNIX_NOW -lt $UNIX_END ] && {
						_wifi set ap any ssid 'NRV'
					}
				;;
			esac
		;;
		spbansin*)
			pidof olsrd >/dev/null || _olsr hna4_inetoffer stop 'bootup'

			uci set system.@system[0].zram_disabled='true'
			uci set system.@weblogin[0].respect_missing_db='false'
			uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '4' )"
			uci set system.@weblogin[0].auth_type='roomnumber'
			uci set olsrd.@meta[0].hnaslave='false'

			# FIXME! ping to 192.168.1.20 / TFTP
			[ $NODENUMBER -eq 2 ] && uci set system.@monitoring[0].switch_error='ignore'

			case "$HARDWARE" in
				'Ubiquiti Bullet'*)
					uci set network.lan.force_link='1'
				;;
			esac

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'SEEPARK'
				}
			}

			_wifi set adhoc 5ghz ssid 'a'
			_wifi set adhoc 2ghz ssid 'g'
		;;
		'schoeneck'*)
			uci set system.@system[0].zram_disabled='true'

			[ "$HARDWARE" = 'TP-LINK TL-WR1043ND' ] && _firmware set_usecase 'Standard,kalua'	# REMOVE!
			uci set system.@fwupdate[0].thrust_min='0'		# FIXME!
			uci set system.@fwupdate[0].allow_unchecked='true'	# FIXME!

			[ "$NODENUMBER" = '2' ] || {
				uci set system.@weblogin[0].authserver="$( _ipsystem getvar 'LANADR' '2' )"
				uci set system.@system[0].disable_automount='true'	# safe memory
			}

			uci set system.@weblogin[0].enabled='0'					# since ~2017apr23?
			uci set system.@weblogin[0].db_cachesize='6000'
			uci set system.@weblogin[0].dynamic_portfw='24:a4:2c:10:21:48'		# NetIO230b/Keller
			uci set system.@weblogin[0].respect_missing_db='false'
			uci set system.@weblogin[0].pdf_labels_simple='true'

			uci set system.@monitoring[0].ignore_switch_error='true'

			uci set olsrd.@meta[0].fixedarp='true'
			uci set olsrd.@meta[0].hnaslave='false'

			_wifi set adhoc 2ghz bssid '02:ca:ff:ee:00:11'
			_wifi set adhoc 2ghz channel '11'
			_wifi set adhoc 2ghz ssid 'x'
			_wifi set adhoc 2ghz mcast_rate '6000'

			case "$NODENUMBER" in
				228|230|234|231|235|232|229|233)
					# all switched together, netio230b on master
					uci set dhcp.lan.ignore=1
				;;
				2)
					uci set system.@system[0].avoid_autoreboot='true'
					_wifi set anymode anyfreq 'off'

					# DHCP is 192.168.2.107 / gateway = 192.168.2.1
					config_add_alias 'wan' '192.168.2.108/24'
				;;
			esac

			[ "$ROAMING" = 'false' ] || {
				apply_olsr_roaming "$ROAMING" && {
					_wifi set ap any ssid 'IFA Ferienpark'
				}
			}

			_wifi set adhoc 2ghz ssid 'ffintern.2GHz'
			_wifi set adhoc 5ghz ssid 'ffintern.5GHz'
			_wifi set anymode 2ghz txpower '23'
			_wifi set anymode 5ghz txpower '20'
		;;
		*)
			# TODO: does not work anymore - at least with r43080
			# enforce b43-hack
			[ -e "/lib/modules/$( uname -r )/b43.ko" ] && {
				local file="/lib/wifi/mac80211.sh"
				local keyword="keyspec}"	# must be at the end of a line
				local command1='config_get bitrates "$device" bitrates'
				local command2='test -n "$bitrates" \&\& iw dev "$ifname" set bitrates legacy-2.4 $bitrates'

				[ "$( uci -q get wireless.@wifi-iface[0].mode )" = "adhoc" ] && {
					[ -n "$( uci -q get wireless.radio0.bitrates )" ] || {
						uci set wireless.radio0.bitrates="6 9 12 18 24 36 48 54"

						case "$( uci -q get wireless.@wifi-iface[0].mcast_rate )" in
							1000|2000|5500|11000)
								uci delete 'wireless.@wifi-iface[0].mcast_rate'
							;;
						esac
					}

					grep -q "$keyword"$ "$file" && {
						sed -i "s/$keyword$/$keyword ; $command1 ; $command2 /" "$file"
					}
				}
			}
		;;
	esac

	case "$HARDWARE" in
		"Buffalo WHR-HP-G54")
			case "$( uci -q get wireless.radio0.rxantenna )-$( uci -q get wireless.radio0.txantenna )" in
				"1-1")
				;;
				*)
					uci set wireless.radio0.rxantenna=1
					uci set wireless.radio0.txantenna=1
					_log it uci_commit daemon alert 'wireless: changed antenna settings'
					uci commit wireless
				;;
			esac
		;;
		"Linksys WRT54G"*)
			case "$( uci -q get wireless.radio0.rxantenna )-$( uci -q get wireless.radio0.txantenna )" in
				"0-0")
				;;
				*)
					uci set wireless.radio0.rxantenna=0
					uci set wireless.radio0.txantenna=0
					_log it uci_commit daemon alert 'wireless: changed antenna settings'
					uci commit wireless
				;;
			esac
		;;
		'TP-LINK TL-WR1043ND')
			# FIXME! detect capabilities during runtime and remember
			uci set wireless.radio0.hwmode='11ng'
		;;
		'TP-LINK TL-WDR4300')
			# FIXME!
			uci set wireless.radio0.hwmode='11ng'
			uci set wireless.radio1.hwmode='11na'
		;;
	esac

	_wifi longshot_name >/dev/null || {
		case "$HARDWARE" in
			'TP-LINK Archer C6U')
			;;
			*)
				# 802.11n works with distributed beaconing
				_wifi set adhoc 2ghz beacon_int '250'
				_wifi set adhoc 5ghz beacon_int  '50'
			;;
		esac
	}

	case "$HARDWARE" in
		'Raspberry Pi Zero'*)
			# https://bugs.openwrt.org/index.php?do=details&task_id=4144
			uci del wireless.radio0.htmode
			# http://lists.openwrt.org/pipermail/openwrt-devel/2021-November/037124.html
			# uci set wireless.@wifi-iface[0].iw_qos_map_set='none'
		;;
	esac

	case "$( uci -q get wireless.radio0.htmode )" in
		'HT40'*)
			uci set wireless.radio0.noscan='1'
		;;
	esac

	case "$( uci -q get wireless.radio1.htmode )" in
		'HT40'*)
			uci set wireless.radio1.noscan='1'
		;;
	esac

	# fix for forgotten network
	case "$CONFIG_PROFILE" in
		*'hybrid')
			grep -sq "wlanadhoc" "/etc/config/wireless" && {
				uci show network | grep -q ^"network.wlanadhoc=" || {
					uci set network.wlanadhoc='interface'
					uci set network.wlanadhoc.proto='static'
					uci set network.wlanadhoc.ipaddr=$(  uci get network.wlan.ipaddr )
					uci set network.wlanadhoc.netmask=$( uci get network.wlan.netmask )
				}
			}
		;;
	esac

	batman_kmodules_are_deactivated()
	{
		kmodule_is_deactivated 'batman-adv'
	}

	batman_kmodules_force_activation()
	{
		kmodule_force_activation 'batman-adv'
		kmodule_force_activation 'ebtables'
#		kmodule_force_activation 'macvlan'
	}

	batman_kmodules_force_deactivation()
	{
		kmodule_force_deactivation 'batman-adv'
		kmodule_force_deactivation 'ebtables'
#		kmodule_force_deactivation 'macvlan'
	}

	batman_needed()
	{
		[ -e '/usr/sbin/batctl' ] || return 1

		case "$CONFIG_PROFILE" in
			testbatman*)
				return 0
			;;
			*)
				batman_kmodules_are_deactivated || batman_kmodules_force_deactivation
				return 1
			;;
		esac
	}

	if batman_needed; then
		uci set batman-adv.bat0.orig_interval=1000	# default = 1000 ms

		local file='/etc/init.d/dnsmasq'
		grep -Fq 'netmask_dhcpcalc' "$file" || {
			sed -i 's/start$/&; local netmask_dhcpcalc; config_get netmask_dhcpcalc "$cfg" netmask_dhcpcalc/' "$file"
			sed -i 's/ $netmask / ${netmask_dhcpcalc:-$netmask} /' "$file"
			sed -i 's/,$NETMASK,/,$netmask,/' "$file"
			# since r39101 needed:
			sed -i 's/eval \(.*\)/&\n	test "$PREFIX" = "${netmask_dhcpcalc:-$netmask}" \&\& netmask="$NETMASK"/' "$file"
		}

		grep -F " \"\$dynamicdhcp\" = \"0\" " "$file" | grep -Fq 'test' || {
			sed -i "s/.* \"\$dynamicdhcp\" = \"0\" .*/& ; test \"\$START\" = '192.168.0.2' \&\& START='192.168.$NODENUMBER.2'; test \"\$END\" = '192.168.0.254' \&\& END='192.168.$NODENUMBER.254'/" "$file"
		}

		batman_kmodules_are_deactivated && batman_kmodules_force_activation
	else
#		batman_kmodules_are_deactivated || batman_kmodules_force_deactivation

		case "$CONFIG_PROFILE" in
			*ap|*hybrid)
				uci set dhcp.wlan.ignore=0
			;;
		esac
	fi

	batman_needed && {
		local dns_ip i
		local router_ip="192.168.$NODENUMBER.1"
		local master_gateway

		case "$CONFIG_PROFILE" in
			testnet*)
				router_ip="192.168.0.1"		# every router has this ip (there is never a NODE 0)
				master_gateway="192.168.99.1"
				dns_ip="$router_ip"
			;;
		esac

		local startup="/tmp/WIFI_SPECIALS.sh"

		set_mac()
		{
			local uci_path="$1"
			local mac="$2"
			local file='/www/monitoring.wifimac'

			if [ -e "$file" ]; then
				uci set "$uci_path=$mac"
			else
				uci delete "$uci_path"
			fi
		}

		batalias_add_if_needed()
		{
			local ifname_ask="$1"
			local ifname proto i mac index channel

			for i in $(seq 0 100); do {
				proto="$( uci -q get network.@alias[${i}].proto )" || continue

				case "$proto" in
					'batadv')
						ifname="$( uci -q get network.@alias[${i}].interface )"
						[ "$ifname_ask" = "$ifname" ] && {
							uci delete "network.@alias[$i]"
						}
					;;
				esac
			} done

			# FIXME! do not add twice
			uci add network alias >/dev/null
			uci set network.@alias[-1].interface="$ifname_ask"
			uci set network.@alias[-1].proto=batadv
			uci set network.@alias[-1].mesh=bat0

			case "$ifname_ask" in
				'lan'|'wan')
					case "$ifname_ask" in
						'lan')
							mac="02:00:ca:b1:$( integer2fourhex "$NODENUMBER" )"
						;;
						'wan')
							mac="02:00:de:ad:$( integer2fourhex "$NODENUMBER" )"
						;;
					esac

					set_mac "network.$ifname_ask.macaddr" "$mac"
				;;
				'wlan'*)
					# e.g. wlan | wlanadhoc | wlanadhocRADIO1
					index="$( _wifi get "$ifname_ask" index )" && {
						channel="$( _wifi get "$ifname_ask" channel )"
						mac="ca:$( integer2fourhex "$channel" ):00:$( integer2fourhex "$NODENUMBER" )"

						set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
					}
				;;
			esac

			{
				echo "DEVNAME=\$( ifstatus \"$ifname_ask\" | grep '\"device\":' | cut -d'\"' -f4 )"
				echo "batctl interface | grep -q ^\"\$DEVNAME: active\" || batctl if add \$DEVNAME"
			} >>"$startup"
		}

		# the first added interface is our originator-address (mac)
		batalias_add_if_needed 'lan'

		uci -q get network.wan >/dev/null && {
			# fixme! ejbw needs an override
			case "$( _net local_inet_offer )" in
				'wan'|'pppoe')
					echo >>"$startup" "# wan not added, because local inet-offer"
				;;
				*)
					batalias_add_if_needed 'wan'
				;;
			esac
		}

		local index mac

		# ifname = macaddress:
		# bridge = 02:00:b0:0b:$nodenumber
		# gw0    = 02:00:c0:ca:c0:1a
		#
		# lan    = 02:00:ca:b1:$nodenumber
		# wan    = 02:00:de:ad:$nodenumber
		# ap1    = 02:00:0a:00:$nodenumber
		# ap2    = 02:00:0b:00:$nodenumber
		# adhocX = ca:$chan:00:$nodenumber

		# fixme! iterate over all wifi-interfaces, e.g. 'add adhoc any/5ghz'
		case "$CONFIG_PROFILE" in
			*'_hybrid')
				_wifi get 'wlanadhoc'       check && batalias_add_if_needed 'wlanadhoc'
				_wifi get 'wlanadhocRADIO1' check && batalias_add_if_needed 'wlanadhocRADIO1'

				# first AP
				index="$( _wifi get 'wlan' index )" && {
					mac="02:00:0a:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}

				# second AP
				index="$( _wifi get 'wlanRADIO1' index )" && {
					mac="02:00:0b:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}
			;;
			*'_adhoc')
				_wifi get 'wlan' check && batalias_add_if_needed 'wlan'
			;;
			*'_ap')
				# first AP
				index="$( _wifi get 'wlan' index )" && {
					mac="02:00:0a:00:$( integer2fourhex "$NODENUMBER" )"
					set_mac "wireless.@wifi-iface[$index].macaddr" "$mac"
				}
			;;
		esac

		case "$CONFIG_PROFILE" in
			*hybrid)
				for i in $(seq 0 15); do {
					[ "$( uci -q get "wireless.@wifi-iface[$i].mode" )" = "ap" ] && {
						echo "NAME=\"\$( uci get wireless.@wifi-iface[$i].network )\""
						echo "DEV=\$( ifstatus \"\$NAME\" | grep '\"device\":' | cut -d'\"' -f4 )"
						echo "_log it batman daemon info \"$startup: adding DEV \$DEV to br-mybridge\""
						echo "brctl addif br-mybridge \$DEV"
					} >>"$startup"
				} done
			;;
			*ap)
				{
					echo "_log it batman daemon info \"$startup: adding DEV wlan0 to br-mybridge\""
					echo "brctl addif br-mybridge wlan0"
					echo "brctl addif br-mybridge wlan1	# dirty: simply fails if n/a"
				} >>"$startup"
			;;
		esac

#		echo "dnsmasq --address=/#/10.63.$NODENUMBER.1 -p 5353" >>"$startup"

		uci set network.mybridge="interface"
		uci set network.mybridge.type="bridge"
		uci set network.mybridge.ifname="bat0"
		uci set network.mybridge.macaddr="02:00:b0:0b:$( integer2fourhex "$NODENUMBER" )"
		uci set network.mybridge.proto="static"
		uci set network.mybridge.ipaddr="192.168.$NODENUMBER.1"
		uci set network.mybridge.netmask="255.255.0.0"
		uci set network.mybridge.netmask_dhcpcalc="255.255.255.0"

		# https://lists.open-mesh.org/pipermail/b.a.t.m.a.n/2013-November/010913.html
		local mac_gateway="02:00:c0:ca:c0:1a"
		command -v ebtables >/dev/null && {
			echo "ebtables -A FORWARD -j DROP -d '$mac_gateway'"
			echo "ebtables -t nat -A POSTROUTING -o bat0 -j DROP -s '$mac_gateway'"
			echo "#  query via: ebtables -L FORWARD --Lc; ebtables -t nat -L POSTROUTING --Lc"
		} >>"$startup"

		case "$CONFIG_PROFILE" in
			*_adhoc)
			;;
			liszt28*|schoeneck*|boltenhagendh*|apphalle*)
				# depends on kmod-macvlan
				{
					echo "_log it batman daemon info \"$startup: forcing gateways ip/mac: $router_ip/$mac_gateway\""
					echo "ip link add link 'br-mybridge' 'gateway0' address '$mac_gateway' type macvlan"
					echo "ip address add $router_ip/32 dev gateway0"
					echo "ip link set dev gateway0 up"
				} >>"$startup"
			;;
		esac

		case "$CONFIG_PROFILE" in
			*_adhoc|*_hybrid)
				uci set batman-adv.bat0.bridge_loop_avoidance=1
			;;
		esac

		# every node is a server, which means: answer DHCP locally
		if [ "$( uci -q get network.mybridge.ipaddr )" = "$master_gateway" ]; then
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="16384kbit/16384kbit"
		else
			uci set batman-adv.bat0.gw_mode=server
			uci set batman-adv.bat0.gw_bandwidth="512kbit/512kbit"

			case "$CONFIG_PROFILE" in
				schoeneck*|boltenhagendh*|apphalle*)
					# no l3-routing proto running, so we need a fix master-gateway
					uci set network.mybridge.gateway="$master_gateway"
					uci set system.@weblogin[0].authserver="$master_gateway"
				;;
			esac
		fi

		uci set dhcp.mybridge=dhcp
		uci set dhcp.mybridge.interface=mybridge
		uci set dhcp.mybridge.start=2
		uci set dhcp.mybridge.limit=253
		uci set dhcp.mybridge.leasetime=12h
		uci set dhcp.mybridge.force=1
		uci set dhcp.mybridge.ignore=0
		uci set dhcp.mybridge.netmask=255.255.0.0
		uci set dhcp.mybridge.dhcp_option="option:router,$router_ip,$dns_ip"	# fixme! dynamic set during runtime
		uci set dhcp.mybridge.leasetime=10m

		uci set dhcp.wlan.ignore=1
	}

	true
}
