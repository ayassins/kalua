#!/bin/sh

olsrd_list_configured_interfaces()
{
	local i=0
	local iface

	while iface="$( uci -q get olsrd.@Interface[$i].interface )"; do {
		case "$( uci -q get olsrd.@Interface[$i].ignore )" in
			1|on|true|enabled|yes)
				# is disabled
			;;
			*)
				echo "$iface"	# e.g. 'lan'
			;;
		esac

		i=$(( i + 1 ))
	} done
}

olsrd_interface_already_in_config()
{
	# e.g.: 'Interface "eth0.1" "eth0.2" "wlan0"'
	if grep -s ^'Interface ' '/var/etc/olsrd.conf' | grep -q "\"$DEVICE\""; then
		logger -t olsrd_hotplug -p daemon.debug "[OK] already_active: '$INTERFACE' => '$DEVICE'"
		return 0
	else
		logger -t olsrd_hotplug -p daemon.info "[OK] ifup: '$INTERFACE' => '$DEVICE'"
		return 1
	fi
}

olsrd_interface_needs_adding()
{
	local iface

	# likely and cheap operation:
	olsrd_interface_already_in_config && return 1

	for iface in $(olsrd_list_configured_interfaces); do {
		[ "$iface" = "$INTERFACE" ] && {
			olsrd_interface_already_in_config || return 0
		}
	} done

	logger -t olsrd_hotplug -p daemon.debug "[OK] interface '$INTERFACE' => '$DEVICE' not used for olsrd"
	return 1
}

case "$ACTION" in
	ifup)
		VXDEV='vx_overlay'
		grep -q ^'vxlan' /proc/modules || VXDEV=lo

		. /tmp/loader
		_net dev_is_valid $VXDEV || {
			[ -z "$ROAMING_TUNNEL_MASTER" ] && {
				_netparam check
				. /tmp/loader
			}

			grep -q "config interface 'vx'" /etc/config/network || {
				cat >>/dev/null <<EOF

config interface 'vx'
	option proto    'vxlan'
	option peeraddr '$ROAMING_TUNNEL_MASTER'
	option port     '4789'
	option vid      '$NODENUMBER'

config interface 'l2vpn'
	option ifname  '@vx'
	option proto   'static'
	option ipaddr  '$ROAMING_TUNNEL_IP'
	option netmask '$( _net cidr2mask $ROAMING_TUNNEL_PRE )'
	option layer   '2'
EOF
}
			ip link add dev $VXDEV type vxlan id $NODENUMBER remote $ROAMING_TUNNEL_MASTER dstport 4789
			ip link set dev $VXDEV up
			ip addr add $ROAMING_TUNNEL_IP/$ROAMING_TUNNEL_PRE broadcast $ROAMING_TUNNEL_BRC dev $VXDEV

			# allow broadcasts:
			echo 0 >/proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

			uci set dawn.@network[0].broadcast_ip="$ROAMING_TUNNEL_BRC"
			uci set dawn.@network[0].network_option=2	# TCP
			uci del dawn.@network[0].disabled

			pidof dawn >/dev/null && /etc/init.d/dawn restart
		}

		# only work after the first normal startup
		# also: no need to test, if enabled
		[ -e '/var/etc/olsrd.conf' ] && {
			# INTERFACE = e.g. 'wlanadhocRADIO1' or 'cfg144d8f'
			# DEVICE    = e.g. 'wlan1-1'
			olsrd_interface_needs_adding && {
				logger -t olsrd_hotplug -p daemon.info "restart: dev $INTERFACE"
				. /etc/rc.common /etc/init.d/olsrd restart
				logger -t olsrd_hotplug -p daemon.info "restart: dev $INTERFACE - ready"
			}
		}
	;;
esac
